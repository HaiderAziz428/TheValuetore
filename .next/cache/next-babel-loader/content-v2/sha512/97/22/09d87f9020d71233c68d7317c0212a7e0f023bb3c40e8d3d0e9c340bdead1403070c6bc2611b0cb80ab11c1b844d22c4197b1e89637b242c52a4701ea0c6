{"ast":null,"code":"import _regeneratorRuntime from \"/Users/michaeldaineka/Desktop/flatlogic/flatlogic-ecommerce/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/michaeldaineka/Desktop/flatlogic/flatlogic-ecommerce/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport config from \"constants/config\";\nimport jwt from \"jsonwebtoken\";\nimport { toast } from \"react-toastify\";\nimport Errors from \"components/admin/FormItems/error/errors\";\nimport Router from 'next/router';\nexport var AUTH_FAILURE = \"AUTH_FAILURE\";\nexport var LOGIN_REQUEST = \"LOGIN_REQUEST\";\nexport var LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport var LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\nexport var LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport var RESET_REQUEST = \"RESET_REQUEST\";\nexport var RESET_SUCCESS = \"RESET_SUCCESS\";\nexport var PASSWORD_RESET_EMAIL_REQUEST = \"PASSWORD_RESET_EMAIL_REQUEST\";\nexport var PASSWORD_RESET_EMAIL_SUCCESS = \"PASSWORD_RESET_EMAIL_SUCCESS\";\nexport var AUTH_INIT_SUCCESS = \"AUTH_INIT_SUCCESS\";\nexport var AUTH_INIT_ERROR = \"AUTH_INIT_ERROR\";\nexport var REGISTER_REQUEST = \"REGISTER_REQUEST\";\nexport var REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\n\nfunction findMe() {\n  return _findMe.apply(this, arguments);\n}\n\nfunction _findMe() {\n  _findMe = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return axios.get(\"/auth/me\");\n\n          case 2:\n            response = _context2.sent;\n            return _context2.abrupt(\"return\", response.data);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _findMe.apply(this, arguments);\n}\n\nexport function authError(payload) {\n  return {\n    type: AUTH_FAILURE,\n    payload: payload\n  };\n}\nexport function doInit() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var currentUser, token;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              currentUser = null;\n              token = true && localStorage.getItem(\"token\");\n\n              if (!token) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.next = 6;\n              return findMe();\n\n            case 6:\n              currentUser = _context.sent;\n\n            case 7:\n              dispatch({\n                type: AUTH_INIT_SUCCESS,\n                payload: {\n                  currentUser: currentUser\n                }\n              });\n              _context.next = 14;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              Errors.handle(_context.t0);\n              dispatch({\n                type: AUTH_INIT_ERROR,\n                payload: _context.t0\n              });\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 10]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n}\nexport function logoutUser() {\n  return function (dispatch) {\n    dispatch({\n      type: LOGOUT_REQUEST\n    });\n    true && localStorage.removeItem(\"token\");\n    true && localStorage.removeItem(\"user\");\n    axios.defaults.headers.common[\"Authorization\"] = \"\";\n    dispatch({\n      type: LOGOUT_SUCCESS\n    });\n  };\n}\nexport function receiveToken(token) {\n  return function (dispatch) {\n    var user = jwt.decode(token);\n    true && localStorage.setItem(\"token\", token);\n    true && localStorage.setItem(\"user\", JSON.stringify(user));\n    axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + token;\n    dispatch({\n      type: LOGIN_SUCCESS\n    });\n    true && dispatch(push(\"/app\"));\n  };\n}\nexport function loginUser(creds) {\n  return function (dispatch) {\n    dispatch({\n      type: LOGIN_REQUEST\n    });\n\n    if (creds.social) {\n      window.location.href = config.baseURLApi + \"/auth/signin/\" + creds.social;\n    } else if (creds.email.length > 0 && creds.password.length > 0) {\n      axios.post(\"/auth/signin/local\", creds).then(function (res) {\n        var token = res.data;\n        dispatch(receiveToken(token));\n        dispatch(doInit());\n        true && dispatch(push(\"/app\"));\n      })[\"catch\"](function (err) {\n        console.log(err.response);\n        dispatch(authError(err.response));\n      });\n    } else {\n      dispatch(authError(\"Something was wrong. Try again\"));\n    }\n  };\n}\nexport function verifyEmail(token) {\n  return function (dispatch) {\n    axios.put(\"/auth/verify-email\", {\n      token: token\n    }).then(function (verified) {\n      if (verified) {\n        toast.success(\"Your email was verified\");\n      }\n    })[\"catch\"](function (err) {\n      toast.error(err.response.data);\n    })[\"finally\"](function () {\n      dispatch(push(\"/login\"));\n    });\n  };\n}\nexport function resetPassword(token, password) {\n  return function (dispatch) {\n    dispatch({\n      type: RESET_REQUEST\n    });\n    axios.put(\"/auth/password-reset\", {\n      token: token,\n      password: password\n    }).then(function (res) {\n      dispatch({\n        type: RESET_SUCCESS\n      });\n      toast.success(\"Password has been updated\");\n      dispatch(push(\"/login\"));\n    })[\"catch\"](function (err) {\n      dispatch(authError(err.response.data));\n    });\n  };\n}\nexport function sendPasswordResetEmail(email) {\n  return function (dispatch) {\n    dispatch({\n      type: PASSWORD_RESET_EMAIL_REQUEST\n    });\n    axios.post(\"/auth/send-password-reset-email\", {\n      email: email\n    }).then(function (res) {\n      dispatch({\n        type: PASSWORD_RESET_EMAIL_SUCCESS\n      });\n      toast.success(\"Email with resetting instructions has been sent\");\n      dispatch(push(\"/login\"));\n    })[\"catch\"](function (err) {\n      dispatch(authError(err.response.data));\n    });\n  };\n}\nexport function registerUser(creds) {\n  return function (dispatch) {\n    dispatch({\n      type: REGISTER_REQUEST\n    });\n\n    if (creds.email.length > 0 && creds.password.length > 0) {\n      axios.post(\"/auth/signup\", creds).then(function (res) {\n        dispatch({\n          type: REGISTER_SUCCESS\n        });\n        toast.success(\"You've been registered successfully. Please check your email for verification link\");\n        dispatch(push(\"/login\"));\n      })[\"catch\"](function (err) {\n        dispatch(authError(err.response.data));\n      });\n    } else {\n      dispatch(authError(\"Something was wrong. Try again\"));\n    }\n  };\n}","map":{"version":3,"sources":["/Users/michaeldaineka/Desktop/flatlogic/flatlogic-ecommerce/redux/actions/auth.js"],"names":["axios","config","jwt","toast","Errors","Router","AUTH_FAILURE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGOUT_REQUEST","LOGOUT_SUCCESS","RESET_REQUEST","RESET_SUCCESS","PASSWORD_RESET_EMAIL_REQUEST","PASSWORD_RESET_EMAIL_SUCCESS","AUTH_INIT_SUCCESS","AUTH_INIT_ERROR","REGISTER_REQUEST","REGISTER_SUCCESS","findMe","get","response","data","authError","payload","type","doInit","dispatch","currentUser","token","localStorage","getItem","handle","logoutUser","removeItem","defaults","headers","common","receiveToken","user","decode","setItem","JSON","stringify","push","loginUser","creds","social","window","location","href","baseURLApi","email","length","password","post","then","res","err","console","log","verifyEmail","put","verified","success","error","resetPassword","sendPasswordResetEmail","registerUser"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport config from \"constants/config\";\nimport jwt from \"jsonwebtoken\";\nimport { toast } from \"react-toastify\";\nimport Errors from \"components/admin/FormItems/error/errors\";\nimport Router from 'next/router';\n\nexport const AUTH_FAILURE = \"AUTH_FAILURE\";\nexport const LOGIN_REQUEST = \"LOGIN_REQUEST\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const RESET_REQUEST = \"RESET_REQUEST\";\nexport const RESET_SUCCESS = \"RESET_SUCCESS\";\nexport const PASSWORD_RESET_EMAIL_REQUEST = \"PASSWORD_RESET_EMAIL_REQUEST\";\nexport const PASSWORD_RESET_EMAIL_SUCCESS = \"PASSWORD_RESET_EMAIL_SUCCESS\";\nexport const AUTH_INIT_SUCCESS = \"AUTH_INIT_SUCCESS\";\nexport const AUTH_INIT_ERROR = \"AUTH_INIT_ERROR\";\nexport const REGISTER_REQUEST = \"REGISTER_REQUEST\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\n\nasync function findMe() {\n  const response = await axios.get(\"/auth/me\");\n  return response.data;\n}\n\nexport function authError(payload) {\n  return {\n    type: AUTH_FAILURE,\n    payload,\n  };\n}\n\nexport function doInit() {\n  return async (dispatch) => {\n    try {\n      let currentUser = null;\n      let token = typeof window !== 'undefined' && localStorage.getItem(\"token\");\n      if (token) {\n        currentUser = await findMe();\n      }\n      dispatch({\n        type: AUTH_INIT_SUCCESS,\n        payload: {\n          currentUser,\n        },\n      });\n    } catch (error) {\n      Errors.handle(error);\n\n      dispatch({\n        type: AUTH_INIT_ERROR,\n        payload: error,\n      });\n    }\n  };\n}\n\nexport function logoutUser() {\n  return (dispatch) => {\n    dispatch({\n      type: LOGOUT_REQUEST,\n    });\n    typeof window !== 'undefined' && localStorage.removeItem(\"token\");\n    typeof window !== 'undefined' && localStorage.removeItem(\"user\");\n    axios.defaults.headers.common[\"Authorization\"] = \"\";\n    dispatch({\n      type: LOGOUT_SUCCESS,\n    });\n  };\n}\n\nexport function receiveToken(token) {\n  return (dispatch) => {\n    let user = jwt.decode(token);\n\n    typeof window !== 'undefined' && localStorage.setItem(\"token\", token);\n    typeof window !== 'undefined' && localStorage.setItem(\"user\", JSON.stringify(user));\n    axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + token;\n    dispatch({\n      type: LOGIN_SUCCESS,\n    });\n    typeof window !== 'undefined' && dispatch(push(\"/app\"));\n  };\n}\n\nexport function loginUser(creds) {\n  return (dispatch) => {\n    dispatch({\n      type: LOGIN_REQUEST,\n    });\n    if (creds.social) {\n      window.location.href = config.baseURLApi + \"/auth/signin/\" + creds.social;\n    } else if (creds.email.length > 0 && creds.password.length > 0) {\n      axios\n        .post(\"/auth/signin/local\", creds)\n        .then((res) => {\n          const token = res.data;\n          dispatch(receiveToken(token));\n          dispatch(doInit());\n          typeof window !== 'undefined' && dispatch(push(\"/app\"));\n        })\n        .catch((err) => {\n          console.log(err.response);\n          dispatch(authError(err.response));\n        });\n    } else {\n      dispatch(authError(\"Something was wrong. Try again\"));\n    }\n  };\n}\n\nexport function verifyEmail(token) {\n  return (dispatch) => {\n    axios\n      .put(\"/auth/verify-email\", { token })\n      .then((verified) => {\n        if (verified) {\n          toast.success(\"Your email was verified\");\n        }\n      })\n      .catch((err) => {\n        toast.error(err.response.data);\n      })\n      .finally(() => {\n        dispatch(push(\"/login\"));\n      });\n  };\n}\n\nexport function resetPassword(token, password) {\n  return (dispatch) => {\n    dispatch({\n      type: RESET_REQUEST,\n    });\n    axios\n      .put(\"/auth/password-reset\", { token, password })\n      .then((res) => {\n        dispatch({\n          type: RESET_SUCCESS,\n        });\n        toast.success(\"Password has been updated\");\n        dispatch(push(\"/login\"));\n      })\n      .catch((err) => {\n        dispatch(authError(err.response.data));\n      });\n  };\n}\n\nexport function sendPasswordResetEmail(email) {\n  return (dispatch) => {\n    dispatch({\n      type: PASSWORD_RESET_EMAIL_REQUEST,\n    });\n    axios\n      .post(\"/auth/send-password-reset-email\", { email })\n      .then((res) => {\n        dispatch({\n          type: PASSWORD_RESET_EMAIL_SUCCESS,\n        });\n        toast.success(\"Email with resetting instructions has been sent\");\n        dispatch(push(\"/login\"));\n      })\n      .catch((err) => {\n        dispatch(authError(err.response.data));\n      });\n  };\n}\n\nexport function registerUser(creds) {\n  return (dispatch) => {\n    dispatch({\n      type: REGISTER_REQUEST,\n    });\n\n    if (creds.email.length > 0 && creds.password.length > 0) {\n      axios\n        .post(\"/auth/signup\", creds)\n        .then((res) => {\n          dispatch({\n            type: REGISTER_SUCCESS,\n          });\n          toast.success(\n            \"You've been registered successfully. Please check your email for verification link\"\n          );\n          dispatch(push(\"/login\"));\n        })\n        .catch((err) => {\n          dispatch(authError(err.response.data));\n        });\n    } else {\n      dispatch(authError(\"Something was wrong. Try again\"));\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}