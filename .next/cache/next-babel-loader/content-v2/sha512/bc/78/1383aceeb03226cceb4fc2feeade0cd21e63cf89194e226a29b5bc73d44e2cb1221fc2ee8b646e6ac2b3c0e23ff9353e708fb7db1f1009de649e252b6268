{"ast":null,"code":"const config = {\n  name: \"react user management\",\n  title: \"React User Management built with React JS by Flatlogic\",\n  version: \"3.8.0\",\n  settings: {\n    screens: {\n      \"xs-max\": 543,\n      \"sm-min\": 544,\n      \"sm-max\": 767,\n      \"md-min\": 768,\n      \"md-max\": 991,\n      \"lg-min\": 992,\n      \"lg-max\": 1199,\n      \"xl-min\": 1200\n    },\n    navCollapseTimeout: 2500\n  }\n};\nexport default function isScreen(size) {\n  const screenPx = window.innerWidth;\n  return (screenPx >= config.settings.screens[`${size}-min`] || size === \"xs\") && (screenPx <= config.settings.screens[`${size}-max`] || size === \"xl\");\n}","map":{"version":3,"sources":["/Users/michaeldaineka/Desktop/flatlogic/flatlogic-ecommerce/core/screenHelper.js"],"names":["config","name","title","version","settings","screens","navCollapseTimeout","isScreen","size","screenPx","window","innerWidth"],"mappings":"AAAA,MAAMA,MAAM,GAAG;AACbC,EAAAA,IAAI,EAAE,uBADO;AAEbC,EAAAA,KAAK,EAAE,wDAFM;AAGbC,EAAAA,OAAO,EAAE,OAHI;AAIbC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,EAAE;AACP,gBAAU,GADH;AAEP,gBAAU,GAFH;AAGP,gBAAU,GAHH;AAIP,gBAAU,GAJH;AAKP,gBAAU,GALH;AAMP,gBAAU,GANH;AAOP,gBAAU,IAPH;AAQP,gBAAU;AARH,KADD;AAWRC,IAAAA,kBAAkB,EAAE;AAXZ;AAJG,CAAf;AAmBA,eAAe,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACrC,QAAMC,QAAQ,GAAGC,MAAM,CAACC,UAAxB;AACA,SACE,CAACF,QAAQ,IAAIT,MAAM,CAACI,QAAP,CAAgBC,OAAhB,CAAyB,GAAEG,IAAK,MAAhC,CAAZ,IAAsDA,IAAI,KAAK,IAAhE,MACCC,QAAQ,IAAIT,MAAM,CAACI,QAAP,CAAgBC,OAAhB,CAAyB,GAAEG,IAAK,MAAhC,CAAZ,IAAsDA,IAAI,KAAK,IADhE,CADF;AAID","sourcesContent":["const config = {\n  name: \"react user management\",\n  title: \"React User Management built with React JS by Flatlogic\",\n  version: \"3.8.0\",\n  settings: {\n    screens: {\n      \"xs-max\": 543,\n      \"sm-min\": 544,\n      \"sm-max\": 767,\n      \"md-min\": 768,\n      \"md-max\": 991,\n      \"lg-min\": 992,\n      \"lg-max\": 1199,\n      \"xl-min\": 1200,\n    },\n    navCollapseTimeout: 2500,\n  },\n};\n\nexport default function isScreen(size) {\n  const screenPx = window.innerWidth;\n  return (\n    (screenPx >= config.settings.screens[`${size}-min`] || size === \"xs\") &&\n    (screenPx <= config.settings.screens[`${size}-max`] || size === \"xl\")\n  );\n}\n"]},"metadata":{},"sourceType":"module"}