{"ast":null,"code":"var _jsxFileName = \"/Users/michaeldaineka/Desktop/flatlogic/flatlogic-ecommerce/pages/login/index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"next/router\";\nimport Link from 'next/link';\nimport { connect } from \"react-redux\";\nimport { Container, Alert, Button, Col, Row, FormGroup, Label, Input, Form } from \"reactstrap\";\nimport { loginUser, receiveToken, doInit } from \"redux/actions/auth\";\nimport jwt from \"jsonwebtoken\";\nimport microsoft from \"public/images/microsoft.png\";\nimport { push } from \"connected-react-router\";\nimport img from \"public/images/e-commerce/login/bg.svg\";\nimport logo from \"public/images/e-commerce/logo.svg\";\nimport eye from 'public/images/e-commerce/login/eye.png';\nimport eyeOff from 'public/images/e-commerce/login/eye-off.png';\nimport s from './Login.module.scss';\n\nclass Login extends React.Component {\n  static isAuthenticated() {\n    const token = false && localStorage.getItem(\"token\");\n    if (!token) return;\n    const date = new Date().getTime() / 1000;\n    const data = jwt.decode(token);\n    if (!data) return;\n    return date < data.exp;\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"admin@flatlogic.com\",\n      password: \"password\"\n    };\n    this.doLogin = this.doLogin.bind(this);\n    this.googleLogin = this.googleLogin.bind(this);\n    this.microsoftLogin = this.microsoftLogin.bind(this);\n    this.changeEmail = this.changeEmail.bind(this);\n    this.changePassword = this.changePassword.bind(this);\n    this.signUp = this.signUp.bind(this);\n  }\n\n  changeEmail(event) {\n    this.setState({\n      email: event.target.value\n    });\n  }\n\n  changePassword(event) {\n    this.setState({\n      password: event.target.value\n    });\n  }\n\n  doLogin(e) {\n    e.preventDefault();\n    this.props.dispatch(loginUser({\n      email: this.state.email,\n      password: this.state.password\n    }));\n  }\n\n  googleLogin() {\n    this.props.dispatch(loginUser({\n      social: \"google\"\n    }));\n  }\n\n  microsoftLogin() {\n    this.props.dispatch(loginUser({\n      social: \"microsoft\"\n    }));\n  }\n\n  componentDidMount() {// const params = new URLSearchParams(this.props.location.search);\n    // const token = params.get(\"token\");\n    // if (token) {\n    //   this.props.dispatch(receiveToken(token));\n    //   this.props.dispatch(doInit());\n    // }\n  }\n\n  signUp() {\n    this.props.dispatch(push(\"/register\"));\n  }\n\n  render() {\n    if (false && Login.isAuthenticated()) {\n      this.props.router.push('/admin/dashboard');\n    }\n\n    return __jsx(Row, {\n      className: \"no-gutters\",\n      style: {\n        height: \"100vh\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    }, __jsx(Col, {\n      xs: 12,\n      md: 6,\n      className: \"d-flex flex-column justify-content-center align-items-center h-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, __jsx(Row, {\n      className: \"d-flex justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, __jsx(Col, {\n      lg: 8,\n      xs: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }, __jsx(Link, {\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, __jsx(\"img\", {\n      src: logo,\n      alt: \"logo\",\n      style: {\n        marginBottom: 120\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 19\n      }\n    })), __jsx(\"h5\", {\n      className: \"fw-bold mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, \"Login\"), __jsx(Form, {\n      className: \"w-100\",\n      onSubmit: this.doLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, __jsx(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 19\n      }\n    }, __jsx(Label, {\n      for: \"exampleEmail\",\n      className: \"fw-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }, \"Email\"), __jsx(Input, {\n      type: \"email\",\n      name: \"text\",\n      id: \"exampleEmail\",\n      className: \"w-100\",\n      placeholder: \"Email\",\n      value: this.state.email,\n      onChange: this.changeEmail,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    })), __jsx(FormGroup, {\n      className: s.formGroup,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 19\n      }\n    }, __jsx(Label, {\n      for: \"exampleEmail\",\n      className: \"fw-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }, \"Password\"), __jsx(Input, {\n      type: this.state.viewPassword ? 'text' : 'password',\n      name: \"text\",\n      id: \"exampleEmail\",\n      className: \"w-100\",\n      placeholder: \"Password\",\n      value: this.state.password,\n      onChange: this.changePassword,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }\n    }), __jsx(\"img\", {\n      className: s.viewPassword,\n      src: this.state.viewPassword ? eye : eyeOff,\n      onClick: () => this.setState({\n        viewPassword: !this.state.viewPassword\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    })), __jsx(\"div\", {\n      className: \"d-flex justify-content-between align-items-center mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 19\n      }\n    }, __jsx(Link, {\n      href: \"/register\",\n      className: \"fw-bold text-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }\n    }, \"Create an account\"), __jsx(Button, {\n      color: \"primary\",\n      className: `${s.button} fw-bold text-uppercase`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }\n    }, \"Login\"))), __jsx(\"footer\", {\n      className: `d-flex justify-content-between ${s.footer}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }, __jsx(Link, {\n      href: \"#\",\n      className: \"fw-bold text-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 19\n      }\n    }, \"Terms & Conditions\"), __jsx(Link, {\n      href: \"#\",\n      className: \"fw-bold text-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 19\n      }\n    }, \"Privacy Policy\"), __jsx(Link, {\n      href: \"#\",\n      className: \"fw-bold text-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 19\n      }\n    }, \"Help\")))))), __jsx(Col, {\n      sm: 6,\n      className: `d-none d-md-inline-block h-100 ${s.backgroundImage}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\n_defineProperty(Login, \"propTypes\", {\n  dispatch: PropTypes.func.isRequired,\n  viewPassword: false\n});\n\nexport async function getServerSideProps(context) {\n  // const res = await axios.get(\"/products\");\n  // const products = res.data.rows;\n  return {\n    props: {} // will be passed to the page component as props\n\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isFetching: state.auth.isFetching,\n    isAuthenticated: state.auth.isAuthenticated,\n    errorMessage: state.auth.errorMessage\n  };\n}\n\nexport default withRouter(connect(mapStateToProps)(Login));","map":{"version":3,"sources":["/Users/michaeldaineka/Desktop/flatlogic/flatlogic-ecommerce/pages/login/index.js"],"names":["React","PropTypes","withRouter","Link","connect","Container","Alert","Button","Col","Row","FormGroup","Label","Input","Form","loginUser","receiveToken","doInit","jwt","microsoft","push","img","logo","eye","eyeOff","s","Login","Component","isAuthenticated","token","localStorage","getItem","date","Date","getTime","data","decode","exp","constructor","props","state","email","password","doLogin","bind","googleLogin","microsoftLogin","changeEmail","changePassword","signUp","event","setState","target","value","e","preventDefault","dispatch","social","componentDidMount","render","router","height","marginBottom","formGroup","viewPassword","button","footer","backgroundImage","func","isRequired","getServerSideProps","context","mapStateToProps","isFetching","auth","errorMessage"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"next/router\";\nimport Link from 'next/link'\nimport { connect } from \"react-redux\";\nimport {\n  Container,\n  Alert,\n  Button,\n  Col,\n  Row,\n  FormGroup,\n  Label,\n  Input,\n  Form,\n} from \"reactstrap\";\nimport { loginUser, receiveToken, doInit } from \"redux/actions/auth\";\nimport jwt from \"jsonwebtoken\";\nimport microsoft from \"public/images/microsoft.png\";\nimport { push } from \"connected-react-router\";\nimport img from \"public/images/e-commerce/login/bg.svg\";\nimport logo from \"public/images/e-commerce/logo.svg\";\nimport eye from 'public/images/e-commerce/login/eye.png';\nimport eyeOff from 'public/images/e-commerce/login/eye-off.png';\n\nimport s from './Login.module.scss';\n\nclass Login extends React.Component {\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    viewPassword: false,\n  };\n\n  static isAuthenticated() {\n    const token = typeof window !== \"undefined\" && localStorage.getItem(\"token\");\n    if (!token) return;\n    const date = new Date().getTime() / 1000;\n    const data = jwt.decode(token);\n    if (!data) return;\n    return date < data.exp;\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: \"admin@flatlogic.com\",\n      password: \"password\",\n    };\n\n    this.doLogin = this.doLogin.bind(this);\n    this.googleLogin = this.googleLogin.bind(this);\n    this.microsoftLogin = this.microsoftLogin.bind(this);\n    this.changeEmail = this.changeEmail.bind(this);\n    this.changePassword = this.changePassword.bind(this);\n    this.signUp = this.signUp.bind(this);\n  }\n\n  changeEmail(event) {\n    this.setState({ email: event.target.value });\n  }\n\n  changePassword(event) {\n    this.setState({ password: event.target.value });\n  }\n\n  doLogin(e) {\n    e.preventDefault();\n    this.props.dispatch(\n      loginUser({ email: this.state.email, password: this.state.password })\n    );\n  }\n\n  googleLogin() {\n    this.props.dispatch(loginUser({ social: \"google\" }));\n  }\n\n  microsoftLogin() {\n    this.props.dispatch(loginUser({ social: \"microsoft\" }));\n  }\n\n  componentDidMount() {\n    // const params = new URLSearchParams(this.props.location.search);\n    // const token = params.get(\"token\");\n    // if (token) {\n    //   this.props.dispatch(receiveToken(token));\n    //   this.props.dispatch(doInit());\n    // }\n  }\n\n  signUp() {\n    this.props.dispatch(push(\"/register\"));\n  }\n\n  render() {\n\n    if (typeof window !== 'undefined' && Login.isAuthenticated()) {\n      this.props.router.push('/admin/dashboard');\n    }\n\n    return (\n      <Row className={\"no-gutters\"} style={{ height: \"100vh\" }}>\n        <Col\n          xs={12}\n          md={6}\n          className={\n            \"d-flex flex-column justify-content-center align-items-center h-100\"\n          }\n        >\n          <Container>\n            <Row className={\"d-flex justify-content-center\"}>\n              <Col lg={8} xs={\"auto\"}>\n                <Link href={\"/\"}>\n                  <img src={logo} alt={\"logo\"} style={{ marginBottom: 120 }} />\n                </Link>\n                <h5 className={\"fw-bold mb-5\"}>Login</h5>\n                <Form className={\"w-100\"} onSubmit={this.doLogin}>\n                  <FormGroup>\n                    <Label for=\"exampleEmail\" className=\"fw-bold\">\n                      Email\n                    </Label>\n                    <Input\n                      type=\"email\"\n                      name=\"text\"\n                      id=\"exampleEmail\"\n                      className=\"w-100\"\n                      placeholder={\"Email\"}\n                      value={this.state.email}\n                      onChange={this.changeEmail}\n                      required\n                    />\n                  </FormGroup>\n                  <FormGroup className={s.formGroup}>\n                    <Label for=\"exampleEmail\" className=\"fw-bold\">\n                      Password\n                    </Label>\n                    <Input\n                        type={this.state.viewPassword ? 'text' : 'password'}\n                      name=\"text\"\n                      id=\"exampleEmail\"\n                      className=\"w-100\"\n                      placeholder={\"Password\"}\n                      value={this.state.password}\n                      onChange={this.changePassword}\n                      required\n                    />\n                    <img className={s.viewPassword} src={this.state.viewPassword ? eye : eyeOff} onClick={() => this.setState({ viewPassword: !this.state.viewPassword })} />\n                  </FormGroup>\n                  <div\n                    className={\n                      \"d-flex justify-content-between align-items-center mt-5\"\n                    }\n                  >\n                    <Link href={\"/register\"} className={\"fw-bold text-primary\"}>\n                      Create an account\n                    </Link>\n                    <Button\n                      color={\"primary\"}\n                      className={`${s.button} fw-bold text-uppercase`}\n                    >\n                      Login\n                    </Button>\n                  </div>\n                </Form>\n                <footer className={`d-flex justify-content-between ${s.footer}`}>\n                  <Link href={\"#\"} className={\"fw-bold text-dark\"}>\n                    Terms & Conditions\n                  </Link>\n                  <Link href={\"#\"} className={\"fw-bold text-dark\"}>\n                    Privacy Policy\n                  </Link>\n                  <Link href={\"#\"} className={\"fw-bold text-dark\"}>\n                    Help\n                  </Link>\n                </footer>\n              </Col>\n            </Row>\n          </Container>\n        </Col>\n        <Col sm={6} className={`d-none d-md-inline-block h-100 ${s.backgroundImage}`} />\n      </Row>\n    );\n  }\n}\n\nexport async function getServerSideProps(context) {\n  // const res = await axios.get(\"/products\");\n  // const products = res.data.rows;\n\n  return {\n    props: {  }, // will be passed to the page component as props\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isFetching: state.auth.isFetching,\n    isAuthenticated: state.auth.isAuthenticated,\n    errorMessage: state.auth.errorMessage,\n  };\n}\n\nexport default withRouter(connect(mapStateToProps)(Login));\n"]},"metadata":{},"sourceType":"module"}