{"ast":null,"code":"var _jsxFileName = \"/Users/michaeldaineka/Desktop/flatlogic/flatlogic-ecommerce/pages/admin/dashboard/widget.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { ResponsiveContainer, AreaChart, Area, Tooltip } from \"recharts\";\nimport PropTypes from 'prop-types';\nimport MoneyIcon from 'public/images/e-commerce/admin/widgets/moneyIcon';\nimport s from './Dashboard.module.scss';\n\nconst SimpleLine = ({\n  color,\n  title,\n  subtitle,\n  value\n}) => {\n  function getRandomData(length, min, max, multiplier = 15, maxDiff = 5) {\n    var array = new Array(length).fill();\n    let lastValue;\n    return array.map((item, index) => {\n      let randomValue = Math.floor(Math.random() * multiplier + 1);\n\n      while (randomValue <= min || randomValue >= max || lastValue && randomValue - lastValue > maxDiff) {\n        randomValue = Math.floor(Math.random() * multiplier + 1);\n      }\n\n      lastValue = randomValue;\n      return {\n        value: randomValue\n      };\n    });\n  }\n\n  const randomData = React.useMemo(() => getRandomData(10), []);\n  return __jsx(\"div\", {\n    className: s.dashboardWidgetWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, __jsx(\"h4\", {\n    className: s.widgetTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, title), __jsx(\"span\", {\n    className: s.widgetSubtitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, subtitle), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, __jsx(MoneyIcon, {\n    className: s.moneyIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }), __jsx(ResponsiveContainer, {\n    height: 90,\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, __jsx(AreaChart, {\n    data: randomData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, __jsx(Area, {\n    type: \"natural\",\n    dataKey: \"value\",\n    stroke: color,\n    fill: color,\n    strokeWidth: 3,\n    fillOpacity: \"0.1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }), __jsx(Tooltip, {\n    itemStyle: {\n      background: 'transparent',\n      color: '#ffffff'\n    },\n    wrapperStyle: {\n      background: 'rgba(0,0,0,.6)',\n      borderRadius: 2,\n      border: 'none'\n    },\n    contentStyle: {\n      background: 'transparent',\n      border: 'none'\n    },\n    labelStyle: {\n      background: 'transparent',\n      color: 'rgba(255,255,255,.8)'\n    },\n    offset: 0,\n    allowEscapeViewBox: {\n      x: true,\n      y: true\n    },\n    coordinate: {\n      x: -400,\n      y: -240\n    },\n    payload: [{\n      name: '05-01',\n      value: 12,\n      unit: 'kg'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  })))));\n};\n\nSimpleLine.propTypes = {\n  classes: PropTypes.object.isRequired,\n  color: PropTypes.string,\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n  value: PropTypes.number\n};\nexport async function getServerSideProps(context) {\n  // const res = await axios.get(\"/products\");\n  // const products = res.data.rows;\n  return {\n    props: {} // will be passed to the page component as props\n\n  };\n}\nexport default SimpleLine;","map":{"version":3,"sources":["/Users/michaeldaineka/Desktop/flatlogic/flatlogic-ecommerce/pages/admin/dashboard/widget.js"],"names":["React","ResponsiveContainer","AreaChart","Area","Tooltip","PropTypes","MoneyIcon","s","SimpleLine","color","title","subtitle","value","getRandomData","length","min","max","multiplier","maxDiff","array","Array","fill","lastValue","map","item","index","randomValue","Math","floor","random","randomData","useMemo","dashboardWidgetWrapper","widgetTitle","widgetSubtitle","moneyIcon","background","borderRadius","border","x","y","name","unit","propTypes","classes","object","isRequired","string","number","getServerSideProps","context","props"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,mBADJ,EAEIC,SAFJ,EAGIC,IAHJ,EAIIC,OAJJ,QAKS,UALT;AAMA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,SAAP,MAAsB,kDAAtB;AACA,OAAOC,CAAP,MAAc,yBAAd;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,KAAT;AAAgBC,EAAAA,QAAhB;AAA0BC,EAAAA;AAA1B,CAAD,KAAuC;AAEtD,WAASC,aAAT,CAAuBC,MAAvB,EAA+BC,GAA/B,EAAoCC,GAApC,EAAyCC,UAAU,GAAG,EAAtD,EAA0DC,OAAO,GAAG,CAApE,EAAuE;AACnE,QAAIC,KAAK,GAAG,IAAIC,KAAJ,CAAUN,MAAV,EAAkBO,IAAlB,EAAZ;AACA,QAAIC,SAAJ;AAEA,WAAOH,KAAK,CAACI,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAChC,UAAIC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBZ,UAAhB,GAA6B,CAAxC,CAAlB;;AAEA,aACES,WAAW,IAAIX,GAAf,IACAW,WAAW,IAAIV,GADf,IAECM,SAAS,IAAII,WAAW,GAAGJ,SAAd,GAA0BJ,OAH1C,EAIE;AACAQ,QAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBZ,UAAhB,GAA6B,CAAxC,CAAd;AACD;;AAEDK,MAAAA,SAAS,GAAGI,WAAZ;AAEA,aAAO;AAAEd,QAAAA,KAAK,EAAEc;AAAT,OAAP;AACD,KAdM,CAAP;AAeD;;AACH,QAAMI,UAAU,GAAG9B,KAAK,CAAC+B,OAAN,CAAc,MAAMlB,aAAa,CAAC,EAAD,CAAjC,EAAuC,EAAvC,CAAnB;AACA,SACE;AAAK,IAAA,SAAS,EAAEN,CAAC,CAACyB,sBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAEzB,CAAC,CAAC0B,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BvB,KAA/B,CADF,EAEE;AAAM,IAAA,SAAS,EAAEH,CAAC,CAAC2B,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCvB,QAApC,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,SAAS,EAAEJ,CAAC,CAAC4B,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,mBAAD;AAAqB,IAAA,MAAM,EAAE,EAA7B;AAAiC,IAAA,KAAK,EAAC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,IAAI,EAAEL,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,OAAO,EAAC,OAFV;AAGE,IAAA,MAAM,EAAErB,KAHV;AAIE,IAAA,IAAI,EAAEA,KAJR;AAKE,IAAA,WAAW,EAAE,CALf;AAME,IAAA,WAAW,EAAC,KANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE,MAAC,OAAD;AACE,IAAA,SAAS,EAAE;AACT2B,MAAAA,UAAU,EAAE,aADH;AAET3B,MAAAA,KAAK,EAAE;AAFE,KADb;AAKE,IAAA,YAAY,EAAE;AACZ2B,MAAAA,UAAU,EAAE,gBADA;AAEZC,MAAAA,YAAY,EAAE,CAFF;AAGZC,MAAAA,MAAM,EAAE;AAHI,KALhB;AAUE,IAAA,YAAY,EAAE;AACZF,MAAAA,UAAU,EAAE,aADA;AAEZE,MAAAA,MAAM,EAAE;AAFI,KAVhB;AAcE,IAAA,UAAU,EAAE;AACVF,MAAAA,UAAU,EAAE,aADF;AAEV3B,MAAAA,KAAK,EAAE;AAFG,KAdd;AAkBE,IAAA,MAAM,EAAE,CAlBV;AAmBE,IAAA,kBAAkB,EAAE;AAClB8B,MAAAA,CAAC,EAAE,IADe;AAElBC,MAAAA,CAAC,EAAE;AAFe,KAnBtB;AAuBE,IAAA,UAAU,EAAE;AAAED,MAAAA,CAAC,EAAE,CAAC,GAAN;AAAWC,MAAAA,CAAC,EAAE,CAAC;AAAf,KAvBd;AAwBE,IAAA,OAAO,EAAE,CAAC;AAAEC,MAAAA,IAAI,EAAE,OAAR;AAAiB7B,MAAAA,KAAK,EAAE,EAAxB;AAA4B8B,MAAAA,IAAI,EAAE;AAAlC,KAAD,CAxBX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF,CAFF,CAHF,CADF;AA+CH,CAtED;;AAwEAlC,UAAU,CAACmC,SAAX,GAAuB;AACrBC,EAAAA,OAAO,EAAEvC,SAAS,CAACwC,MAAV,CAAiBC,UADL;AAErBrC,EAAAA,KAAK,EAAEJ,SAAS,CAAC0C,MAFI;AAGrBrC,EAAAA,KAAK,EAAEL,SAAS,CAAC0C,MAHI;AAIrBpC,EAAAA,QAAQ,EAAEN,SAAS,CAAC0C,MAJC;AAKrBnC,EAAAA,KAAK,EAAEP,SAAS,CAAC2C;AALI,CAAvB;AAQA,OAAO,eAAeC,kBAAf,CAAkCC,OAAlC,EAA2C;AAC9C;AACA;AAEA,SAAO;AACHC,IAAAA,KAAK,EAAE,EADJ,CACU;;AADV,GAAP;AAGH;AAED,eAAe3C,UAAf","sourcesContent":["import React from 'react';\nimport {\n    ResponsiveContainer,\n    AreaChart,\n    Area,\n    Tooltip,\n  } from \"recharts\";\nimport PropTypes from 'prop-types';\n\nimport MoneyIcon from 'public/images/e-commerce/admin/widgets/moneyIcon';\nimport s from './Dashboard.module.scss';\n\nconst SimpleLine = ({ color, title, subtitle, value }) => {\n\n    function getRandomData(length, min, max, multiplier = 15, maxDiff = 5) {\n        var array = new Array(length).fill();\n        let lastValue;\n      \n        return array.map((item, index) => {\n          let randomValue = Math.floor(Math.random() * multiplier + 1);\n      \n          while (\n            randomValue <= min ||\n            randomValue >= max ||\n            (lastValue && randomValue - lastValue > maxDiff)\n          ) {\n            randomValue = Math.floor(Math.random() * multiplier + 1);\n          }\n      \n          lastValue = randomValue;\n      \n          return { value: randomValue };\n        });\n      }\n    const randomData = React.useMemo(() => getRandomData(10), []);\n    return (\n      <div className={s.dashboardWidgetWrapper}>\n        <h4 className={s.widgetTitle}>{title}</h4>\n        <span className={s.widgetSubtitle}>{subtitle}</span>\n        <div>\n          <MoneyIcon className={s.moneyIcon} />\n          <ResponsiveContainer height={90} width=\"100%\">\n            <AreaChart data={randomData}>\n              <Area\n                type=\"natural\"\n                dataKey=\"value\"\n                stroke={color}\n                fill={color}\n                strokeWidth={3}\n                fillOpacity=\"0.1\"\n              />\n              <Tooltip\n                itemStyle={{\n                  background: 'transparent',\n                  color: '#ffffff',\n                }}\n                wrapperStyle={{\n                  background: 'rgba(0,0,0,.6)',\n                  borderRadius: 2,\n                  border: 'none',\n                }}\n                contentStyle={{\n                  background: 'transparent',\n                  border: 'none',\n                }}\n                labelStyle={{\n                  background: 'transparent',\n                  color: 'rgba(255,255,255,.8)'\n                }}\n                offset={0}\n                allowEscapeViewBox={{\n                  x: true,\n                  y: true\n                }}\n                coordinate={{ x: -400, y: -240 }}\n                payload={[{ name: '05-01', value: 12, unit: 'kg' }]}\n              />\n            </AreaChart>\n          </ResponsiveContainer>\n        </div>\n      </div>\n    );\n}\n\nSimpleLine.propTypes = {\n  classes: PropTypes.object.isRequired,\n  color: PropTypes.string,\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n  value: PropTypes.number,\n}\n\nexport async function getServerSideProps(context) {\n    // const res = await axios.get(\"/products\");\n    // const products = res.data.rows;\n\n    return {\n        props: {  }, // will be passed to the page component as props\n    };\n}\n\nexport default SimpleLine;\n"]},"metadata":{},"sourceType":"module"}