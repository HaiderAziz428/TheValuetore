{"ast":null,"code":"import Errors from \"components/admin/FormItems/error/errors\";\nimport axios from \"axios\";\n\nasync function list() {\n  const response = await axios.get(`/products`);\n  return response.data;\n}\n\nconst actions = {\n  doAdd: product => async dispatch => {\n    dispatch({\n      type: \"PRODUCTS_LIST_DO_ADD\",\n      payload: {\n        product\n      }\n    });\n  },\n  doFetch: (filter, keepPagination = false) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: \"PRODUCTS_LIST_FETCH_STARTED\",\n        payload: {\n          filter,\n          keepPagination\n        }\n      });\n      const response = await list();\n      dispatch({\n        type: \"PRODUCTS_LIST_FETCH_SUCCESS\",\n        payload: {\n          rows: response.rows,\n          count: response.count\n        }\n      });\n    } catch (error) {\n      Errors.handle(error);\n      dispatch({\n        type: \"PRODUCTS_LIST_FETCH_ERROR\"\n      });\n    }\n  },\n  doDelete: id => async dispatch => {\n    try {\n      dispatch({\n        type: \"PRODUCTS_LIST_DELETE_STARTED\"\n      });\n      await axios.delete(`/products/${id}`);\n      dispatch({\n        type: \"PRODUCTS_LIST_DELETE_SUCCESS\"\n      });\n      const response = await list();\n      dispatch({\n        type: \"PRODUCTS_LIST_FETCH_SUCCESS\",\n        payload: {\n          rows: response.rows,\n          count: response.count\n        }\n      });\n    } catch (error) {\n      Errors.handle(error);\n      dispatch({\n        type: \"PRODUCTS_LIST_DELETE_ERROR\"\n      });\n    }\n  },\n  doOpenConfirm: id => async dispatch => {\n    dispatch({\n      type: \"PRODUCTS_LIST_OPEN_CONFIRM\",\n      payload: {\n        id: id\n      }\n    });\n  },\n  doCloseConfirm: () => async dispatch => {\n    dispatch({\n      type: \"PRODUCTS_LIST_CLOSE_CONFIRM\"\n    });\n  }\n};\nexport default actions;","map":{"version":3,"sources":["/Users/michaeldaineka/Desktop/flatlogic/flatlogic-ecommerce/redux/actions/products/productsListActions.js"],"names":["Errors","axios","list","response","get","data","actions","doAdd","product","dispatch","type","payload","doFetch","filter","keepPagination","getState","rows","count","error","handle","doDelete","id","delete","doOpenConfirm","doCloseConfirm"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,yCAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAeC,IAAf,GAAsB;AACpB,QAAMC,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAW,WAAX,CAAvB;AACA,SAAOD,QAAQ,CAACE,IAAhB;AACD;;AAED,MAAMC,OAAO,GAAG;AACdC,EAAAA,KAAK,EAAGC,OAAD,IAAa,MAAOC,QAAP,IAAoB;AACtCA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAE,sBADC;AAEPC,MAAAA,OAAO,EAAE;AAACH,QAAAA;AAAD;AAFF,KAAD,CAAR;AAID,GANa;AAQdI,EAAAA,OAAO,EAAE,CAACC,MAAD,EAASC,cAAc,GAAG,KAA1B,KAAoC,OAAOL,QAAP,EAAiBM,QAAjB,KAA8B;AACzE,QAAI;AACFN,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAE,6BADC;AAEPC,QAAAA,OAAO,EAAE;AAAEE,UAAAA,MAAF;AAAUC,UAAAA;AAAV;AAFF,OAAD,CAAR;AAKA,YAAMX,QAAQ,GAAG,MAAMD,IAAI,EAA3B;AAEAO,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAE,6BADC;AAEPC,QAAAA,OAAO,EAAE;AACPK,UAAAA,IAAI,EAAEb,QAAQ,CAACa,IADR;AAEPC,UAAAA,KAAK,EAAEd,QAAQ,CAACc;AAFT;AAFF,OAAD,CAAR;AAOD,KAfD,CAeE,OAAOC,KAAP,EAAc;AACdlB,MAAAA,MAAM,CAACmB,MAAP,CAAcD,KAAd;AAEAT,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAE;AADC,OAAD,CAAR;AAGD;AACF,GA/Ba;AAiCdU,EAAAA,QAAQ,EAAGC,EAAD,IAAQ,MAAOZ,QAAP,IAAoB;AACpC,QAAI;AACFA,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAE;AADC,OAAD,CAAR;AAIA,YAAMT,KAAK,CAACqB,MAAN,CAAc,aAAYD,EAAG,EAA7B,CAAN;AAEAZ,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAE;AADC,OAAD,CAAR;AAIA,YAAMP,QAAQ,GAAG,MAAMD,IAAI,EAA3B;AACAO,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAE,6BADC;AAEPC,QAAAA,OAAO,EAAE;AACPK,UAAAA,IAAI,EAAEb,QAAQ,CAACa,IADR;AAEPC,UAAAA,KAAK,EAAEd,QAAQ,CAACc;AAFT;AAFF,OAAD,CAAR;AAOD,KAnBD,CAmBE,OAAOC,KAAP,EAAc;AACdlB,MAAAA,MAAM,CAACmB,MAAP,CAAcD,KAAd;AAEAT,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAE;AADC,OAAD,CAAR;AAGD;AACF,GA5Da;AA6Dda,EAAAA,aAAa,EAAGF,EAAD,IAAQ,MAAOZ,QAAP,IAAoB;AACzCA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAE,4BADC;AAEPC,MAAAA,OAAO,EAAE;AACPU,QAAAA,EAAE,EAAEA;AADG;AAFF,KAAD,CAAR;AAMD,GApEa;AAqEdG,EAAAA,cAAc,EAAE,MAAM,MAAOf,QAAP,IAAoB;AACxCA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAGD;AAzEa,CAAhB;AA4EA,eAAeJ,OAAf","sourcesContent":["import Errors from \"components/admin/FormItems/error/errors\";\nimport axios from \"axios\";\n\nasync function list() {\n  const response = await axios.get(`/products`);\n  return response.data;\n}\n\nconst actions = {\n  doAdd: (product) => async (dispatch) => {\n    dispatch({\n      type: \"PRODUCTS_LIST_DO_ADD\",\n      payload: {product}\n    });\n  },\n\n  doFetch: (filter, keepPagination = false) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: \"PRODUCTS_LIST_FETCH_STARTED\",\n        payload: { filter, keepPagination },\n      });\n\n      const response = await list();\n\n      dispatch({\n        type: \"PRODUCTS_LIST_FETCH_SUCCESS\",\n        payload: {\n          rows: response.rows,\n          count: response.count,\n        },\n      });\n    } catch (error) {\n      Errors.handle(error);\n\n      dispatch({\n        type: \"PRODUCTS_LIST_FETCH_ERROR\",\n      });\n    }\n  },\n\n  doDelete: (id) => async (dispatch) => {\n    try {\n      dispatch({\n        type: \"PRODUCTS_LIST_DELETE_STARTED\",\n      });\n\n      await axios.delete(`/products/${id}`);\n\n      dispatch({\n        type: \"PRODUCTS_LIST_DELETE_SUCCESS\",\n      });\n\n      const response = await list();\n      dispatch({\n        type: \"PRODUCTS_LIST_FETCH_SUCCESS\",\n        payload: {\n          rows: response.rows,\n          count: response.count,\n        },\n      });\n    } catch (error) {\n      Errors.handle(error);\n\n      dispatch({\n        type: \"PRODUCTS_LIST_DELETE_ERROR\",\n      });\n    }\n  },\n  doOpenConfirm: (id) => async (dispatch) => {\n    dispatch({\n      type: \"PRODUCTS_LIST_OPEN_CONFIRM\",\n      payload: {\n        id: id,\n      },\n    });\n  },\n  doCloseConfirm: () => async (dispatch) => {\n    dispatch({\n      type: \"PRODUCTS_LIST_CLOSE_CONFIRM\",\n    });\n  },\n};\n\nexport default actions;\n"]},"metadata":{},"sourceType":"module"}