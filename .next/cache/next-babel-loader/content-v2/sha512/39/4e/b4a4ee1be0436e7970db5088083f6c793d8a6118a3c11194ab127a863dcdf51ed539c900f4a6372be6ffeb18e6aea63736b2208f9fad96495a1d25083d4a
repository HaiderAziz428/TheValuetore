{"ast":null,"code":"import _regeneratorRuntime from \"/Users/michaeldaineka/Desktop/flatlogic/flatlogic-ecommerce/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/michaeldaineka/Desktop/flatlogic/flatlogic-ecommerce/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Errors from \"components/admin/FormItems/error/errors\";\nimport axios from \"axios\";\n\nfunction list() {\n  return _list.apply(this, arguments);\n}\n\nfunction _list() {\n  _list = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return axios.get(\"/products\");\n\n          case 2:\n            response = _context6.sent;\n            return _context6.abrupt(\"return\", response.data);\n\n          case 4:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _list.apply(this, arguments);\n}\n\nvar actions = {\n  doAdd: function doAdd(product) {\n    return /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                dispatch({\n                  type: \"PRODUCTS_LIST_DO_ADD\",\n                  payload: {\n                    product: product\n                  }\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n  },\n  doFetch: function doFetch(filter) {\n    var keepPagination = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    return /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch, getState) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                dispatch({\n                  type: \"PRODUCTS_LIST_FETCH_STARTED\",\n                  payload: {\n                    filter: filter,\n                    keepPagination: keepPagination\n                  }\n                });\n                _context2.next = 4;\n                return list();\n\n              case 4:\n                response = _context2.sent;\n                dispatch({\n                  type: \"PRODUCTS_LIST_FETCH_SUCCESS\",\n                  payload: {\n                    rows: response.rows,\n                    count: response.count\n                  }\n                });\n                _context2.next = 12;\n                break;\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](0);\n                Errors.handle(_context2.t0);\n                dispatch({\n                  type: \"PRODUCTS_LIST_FETCH_ERROR\"\n                });\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 8]]);\n      }));\n\n      return function (_x2, _x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n  },\n  doDelete: function doDelete(id) {\n    return /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                dispatch({\n                  type: \"PRODUCTS_LIST_DELETE_STARTED\"\n                });\n                _context3.next = 4;\n                return axios[\"delete\"](\"/products/\".concat(id));\n\n              case 4:\n                dispatch({\n                  type: \"PRODUCTS_LIST_DELETE_SUCCESS\"\n                });\n                _context3.next = 7;\n                return list();\n\n              case 7:\n                response = _context3.sent;\n                dispatch({\n                  type: \"PRODUCTS_LIST_FETCH_SUCCESS\",\n                  payload: {\n                    rows: response.rows,\n                    count: response.count\n                  }\n                });\n                _context3.next = 15;\n                break;\n\n              case 11:\n                _context3.prev = 11;\n                _context3.t0 = _context3[\"catch\"](0);\n                Errors.handle(_context3.t0);\n                dispatch({\n                  type: \"PRODUCTS_LIST_DELETE_ERROR\"\n                });\n\n              case 15:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 11]]);\n      }));\n\n      return function (_x4) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n  },\n  doOpenConfirm: function doOpenConfirm(id) {\n    return /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                dispatch({\n                  type: \"PRODUCTS_LIST_OPEN_CONFIRM\",\n                  payload: {\n                    id: id\n                  }\n                });\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x5) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n  },\n  doCloseConfirm: function doCloseConfirm() {\n    return /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                dispatch({\n                  type: \"PRODUCTS_LIST_CLOSE_CONFIRM\"\n                });\n\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x6) {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n  }\n};\nexport default actions;","map":{"version":3,"sources":["/Users/michaeldaineka/Desktop/flatlogic/flatlogic-ecommerce/redux/actions/products/productsListActions.js"],"names":["Errors","axios","list","get","response","data","actions","doAdd","product","dispatch","type","payload","doFetch","filter","keepPagination","getState","rows","count","handle","doDelete","id","doOpenConfirm","doCloseConfirm"],"mappings":"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","sourcesContent":["import Errors from \"components/admin/FormItems/error/errors\";\nimport axios from \"axios\";\n\nasync function list() {\n  const response = await axios.get(`/products`);\n  return response.data;\n}\n\nconst actions = {\n  doAdd: (product) => async (dispatch) => {\n    dispatch({\n      type: \"PRODUCTS_LIST_DO_ADD\",\n      payload: {product}\n    });\n  },\n\n  doFetch: (filter, keepPagination = false) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: \"PRODUCTS_LIST_FETCH_STARTED\",\n        payload: { filter, keepPagination },\n      });\n\n      const response = await list();\n\n      dispatch({\n        type: \"PRODUCTS_LIST_FETCH_SUCCESS\",\n        payload: {\n          rows: response.rows,\n          count: response.count,\n        },\n      });\n    } catch (error) {\n      Errors.handle(error);\n\n      dispatch({\n        type: \"PRODUCTS_LIST_FETCH_ERROR\",\n      });\n    }\n  },\n\n  doDelete: (id) => async (dispatch) => {\n    try {\n      dispatch({\n        type: \"PRODUCTS_LIST_DELETE_STARTED\",\n      });\n\n      await axios.delete(`/products/${id}`);\n\n      dispatch({\n        type: \"PRODUCTS_LIST_DELETE_SUCCESS\",\n      });\n\n      const response = await list();\n      dispatch({\n        type: \"PRODUCTS_LIST_FETCH_SUCCESS\",\n        payload: {\n          rows: response.rows,\n          count: response.count,\n        },\n      });\n    } catch (error) {\n      Errors.handle(error);\n\n      dispatch({\n        type: \"PRODUCTS_LIST_DELETE_ERROR\",\n      });\n    }\n  },\n  doOpenConfirm: (id) => async (dispatch) => {\n    dispatch({\n      type: \"PRODUCTS_LIST_OPEN_CONFIRM\",\n      payload: {\n        id: id,\n      },\n    });\n  },\n  doCloseConfirm: () => async (dispatch) => {\n    dispatch({\n      type: \"PRODUCTS_LIST_CLOSE_CONFIRM\",\n    });\n  },\n};\n\nexport default actions;\n"]},"metadata":{},"sourceType":"module"}