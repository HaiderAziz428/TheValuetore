{"ast":null,"code":"var _jsxFileName = \"/Users/michaeldaineka/Desktop/flatlogic/flatlogic-ecommerce/components/e-commerce/Sidebar/LinksGroup/LinksGroup.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Collapse, Badge } from \"reactstrap\";\nimport { Route } from \"react-router\";\nimport classnames from \"classnames\";\nimport { connect } from \"react-redux\";\nimport s from \"./LinksGroup.module.scss\";\n\nclass LinksGroup extends Component {\n  /* eslint-disable */\n\n  /* eslint-enable */\n  constructor(props) {\n    super(props);\n    this.togglePanelCollapse = this.togglePanelCollapse.bind(this);\n    this.state = {\n      headerLinkWasClicked: true\n    };\n  }\n\n  togglePanelCollapse(link) {\n    this.props.onActiveSidebarItemChange(link);\n    this.setState({\n      headerLinkWasClicked: !this.state.headerLinkWasClicked || (this.props.activeItem || link) && !this.props.activeItem.includes(this.props.index)\n    });\n  }\n\n  render() {\n    const isOpen = this.props.activeItem && this.props.activeItem.includes(this.props.index) && this.state.headerLinkWasClicked;\n    const {\n      exact\n    } = this.props.exact;\n\n    if (!this.props.childrenLinks) {\n      if (this.props.isHeader) {\n        return __jsx(\"li\", {\n          className: classnames(\"link-wrapper\", s.headerLink, this.props.className),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 11\n          }\n        }, this.props.iconType === \"text\" ? __jsx(\"span\", {\n          className: classnames(\"icon\", s.icon),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }\n        }, __jsx(\"i\", {\n          className: `la ${this.props.iconName}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 19\n          }\n        })) : __jsx(\"span\", {\n          className: s.iconWrapper,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }\n        }, this.props.iconName), this.props.header, \" \", this.props.label && __jsx(\"sup\", {\n          className: `${s.headerLabel} ${s.headerUpdate} text-${this.props.labelColor || \"warning\"}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }\n        }, this.props.label), this.props.badge && __jsx(Badge, {\n          className: s.badge,\n          pill: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }\n        }, \"9\"));\n      }\n\n      return __jsx(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }\n      }, this.props.header, \" \", this.props.label && __jsx(\"sup\", {\n        className: `${s.headerLabel} text-${this.props.labelColor || \"warning\"}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }\n      }, this.props.label));\n    }\n    /* eslint-disable */\n\n\n    return (// <Route\n      //   path={this.props.link}\n      //   children={(params) => {\n      //     const { match } = params;\n      //     return (\n      //       <li\n      //         className={classnames(\n      //           \"link-wrapper\",\n      //           { [s.headerLink]: this.props.isHeader },\n      //           this.props.className\n      //         )}\n      //       >\n      //         <a\n      //           className={classnames(\n      //             { [s.headerLinkActive]: match },\n      //             { [s.collapsed]: isOpen },\n      //             \"d-flex\"\n      //           )}\n      //           style={{\n      //             paddingLeft: `${\n      //               this.props.deep == 0 ? 33 : 26 + 10 * (this.props.deep - 1)\n      //             }px`,\n      //           }}\n      //           onClick={() => this.togglePanelCollapse(this.props.link)}\n      //         >\n      //           {this.props.isHeader ? (\n      //             <span className={classnames(\"icon\", s.icon)}>\n      //               <i className={`fi ${this.props.iconName}`} />\n      //             </span>\n      //           ) : null}\n      //           {this.props.header}{\" \"}\n      //           {this.props.label && (\n      //             <sup\n      //               className={`${s.headerLabel} ${s.headerNode} ml-1 text-${\n      //                 this.props.labelColor || \"warning\"\n      //               }`}\n      //             >\n      //               {this.props.label}\n      //             </sup>\n      //           )}\n      //           <b className={[\"la la-angle-left\", s.caret].join(\" \")} />\n      //         </a>\n      //         {/* eslint-enable */}\n      //         <Collapse className={s.panel} isOpen={isOpen}>\n      //           <ul>\n      //             {this.props.childrenLinks &&\n      //               this.props.childrenLinks.map((child, ind) => (\n      //                 <LinksGroup\n      //                   onActiveSidebarItemChange={\n      //                     this.props.onActiveSidebarItemChange\n      //                   }\n      //                   activeItem={this.props.activeItem}\n      //                   header={child.header}\n      //                   link={child.link}\n      //                   index={child.index}\n      //                   childrenLinks={child.childrenLinks}\n      //                   deep={this.props.deep + 1}\n      //                   key={ind} // eslint-disable-line\n      //                 />\n      //               ))}\n      //           </ul>\n      //         </Collapse>\n      //       </li>\n      //     );\n      //   }}\n      // />\n      __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 9\n        }\n      })\n    );\n  }\n\n}\n\n_defineProperty(LinksGroup, \"propTypes\", {\n  childrenLinks: PropTypes.array,\n  iconName: PropTypes.string,\n  className: PropTypes.string,\n  badge: PropTypes.string,\n  label: PropTypes.string,\n  activeItem: PropTypes.string,\n  isHeader: PropTypes.bool,\n  index: PropTypes.string,\n  deep: PropTypes.number,\n  onActiveSidebarItemChange: PropTypes.func,\n  labelColor: PropTypes.string,\n  exact: PropTypes.bool\n});\n\n_defineProperty(LinksGroup, \"defaultProps\", {\n  link: \"\",\n  childrenLinks: null,\n  className: \"\",\n  isHeader: false,\n  deep: 0,\n  activeItem: \"\",\n  label: \"\",\n  exact: true\n});\n\nexport default LinksGroup;","map":{"version":3,"sources":["/Users/michaeldaineka/Desktop/flatlogic/flatlogic-ecommerce/components/e-commerce/Sidebar/LinksGroup/LinksGroup.js"],"names":["React","Component","PropTypes","Collapse","Badge","Route","classnames","connect","s","LinksGroup","constructor","props","togglePanelCollapse","bind","state","headerLinkWasClicked","link","onActiveSidebarItemChange","setState","activeItem","includes","index","render","isOpen","exact","childrenLinks","isHeader","headerLink","className","iconType","icon","iconName","iconWrapper","header","label","headerLabel","headerUpdate","labelColor","badge","array","string","bool","deep","number","func"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Collapse, Badge } from \"reactstrap\";\nimport { Route } from \"react-router\";\nimport classnames from \"classnames\";\nimport { connect } from \"react-redux\";\n\nimport s from \"./LinksGroup.module.scss\";\n\nclass LinksGroup extends Component {\n  /* eslint-disable */\n  static propTypes = {\n    childrenLinks: PropTypes.array,\n    iconName: PropTypes.string,\n    className: PropTypes.string,\n    badge: PropTypes.string,\n    label: PropTypes.string,\n    activeItem: PropTypes.string,\n    isHeader: PropTypes.bool,\n    index: PropTypes.string,\n    deep: PropTypes.number,\n    onActiveSidebarItemChange: PropTypes.func,\n    labelColor: PropTypes.string,\n    exact: PropTypes.bool,\n  };\n  /* eslint-enable */\n\n  static defaultProps = {\n    link: \"\",\n    childrenLinks: null,\n    className: \"\",\n    isHeader: false,\n    deep: 0,\n    activeItem: \"\",\n    label: \"\",\n    exact: true,\n  };\n\n  constructor(props) {\n    super(props);\n    this.togglePanelCollapse = this.togglePanelCollapse.bind(this);\n\n    this.state = {\n      headerLinkWasClicked: true,\n    };\n  }\n\n  togglePanelCollapse(link) {\n    this.props.onActiveSidebarItemChange(link);\n    this.setState({\n      headerLinkWasClicked:\n        !this.state.headerLinkWasClicked ||\n        ((this.props.activeItem || link) &&\n          !this.props.activeItem.includes(this.props.index)),\n    });\n  }\n\n  render() {\n    const isOpen =\n      this.props.activeItem &&\n      this.props.activeItem.includes(this.props.index) &&\n      this.state.headerLinkWasClicked;\n\n    const { exact } = this.props.exact;\n\n    if (!this.props.childrenLinks) {\n      if (this.props.isHeader) {\n        return (\n          <li\n            className={classnames(\n              \"link-wrapper\",\n              s.headerLink,\n              this.props.className\n            )}\n          >\n            {/*<NavLink*/}\n            {/*  to={this.props.link}*/}\n            {/*  activeClassName={s.headerLinkActive}*/}\n            {/*  exact={exact}*/}\n            {/*  target={this.props.target}*/}\n            {/*>*/}\n              {this.props.iconType === \"text\" ? (\n                <span className={classnames(\"icon\", s.icon)}>\n                  <i className={`la ${this.props.iconName}`} />\n                </span>\n              ) : (\n                <span className={s.iconWrapper}>{this.props.iconName}</span>\n              )}\n              {this.props.header}{\" \"}\n              {this.props.label && (\n                <sup\n                  className={`${s.headerLabel} ${s.headerUpdate} text-${\n                    this.props.labelColor || \"warning\"\n                  }`}\n                >\n                  {this.props.label}\n                </sup>\n              )}\n              {this.props.badge && (\n                <Badge className={s.badge} pill>\n                  9\n                </Badge>\n              )}\n            {/*</NavLink>*/}\n          </li>\n        );\n      }\n      return (\n        <li>\n          {/*<NavLink*/}\n          {/*  to={this.props.link}*/}\n          {/*  activeClassName={s.headerLinkActive}*/}\n          {/*  style={{ paddingLeft: `${26 + 10 * (this.props.deep - 1)}px` }}*/}\n          {/*  onClick={(e) => {*/}\n          {/*    // able to go to link is not available(for Demo)*/}\n          {/*    if (this.props.link.includes(\"menu\")) {*/}\n          {/*      e.preventDefault();*/}\n          {/*    }*/}\n          {/*  }}*/}\n          {/*  exact={exact}*/}\n          {/*>*/}\n            {this.props.header}{\" \"}\n            {this.props.label && (\n              <sup\n                className={`${s.headerLabel} text-${\n                  this.props.labelColor || \"warning\"\n                }`}\n              >\n                {this.props.label}\n              </sup>\n            )}\n          {/*</NavLink>*/}\n        </li>\n      );\n    }\n    /* eslint-disable */\n    return (\n      // <Route\n      //   path={this.props.link}\n      //   children={(params) => {\n      //     const { match } = params;\n      //     return (\n      //       <li\n      //         className={classnames(\n      //           \"link-wrapper\",\n      //           { [s.headerLink]: this.props.isHeader },\n      //           this.props.className\n      //         )}\n      //       >\n      //         <a\n      //           className={classnames(\n      //             { [s.headerLinkActive]: match },\n      //             { [s.collapsed]: isOpen },\n      //             \"d-flex\"\n      //           )}\n      //           style={{\n      //             paddingLeft: `${\n      //               this.props.deep == 0 ? 33 : 26 + 10 * (this.props.deep - 1)\n      //             }px`,\n      //           }}\n      //           onClick={() => this.togglePanelCollapse(this.props.link)}\n      //         >\n      //           {this.props.isHeader ? (\n      //             <span className={classnames(\"icon\", s.icon)}>\n      //               <i className={`fi ${this.props.iconName}`} />\n      //             </span>\n      //           ) : null}\n      //           {this.props.header}{\" \"}\n      //           {this.props.label && (\n      //             <sup\n      //               className={`${s.headerLabel} ${s.headerNode} ml-1 text-${\n      //                 this.props.labelColor || \"warning\"\n      //               }`}\n      //             >\n      //               {this.props.label}\n      //             </sup>\n      //           )}\n      //           <b className={[\"la la-angle-left\", s.caret].join(\" \")} />\n      //         </a>\n      //         {/* eslint-enable */}\n      //         <Collapse className={s.panel} isOpen={isOpen}>\n      //           <ul>\n      //             {this.props.childrenLinks &&\n      //               this.props.childrenLinks.map((child, ind) => (\n      //                 <LinksGroup\n      //                   onActiveSidebarItemChange={\n      //                     this.props.onActiveSidebarItemChange\n      //                   }\n      //                   activeItem={this.props.activeItem}\n      //                   header={child.header}\n      //                   link={child.link}\n      //                   index={child.index}\n      //                   childrenLinks={child.childrenLinks}\n      //                   deep={this.props.deep + 1}\n      //                   key={ind} // eslint-disable-line\n      //                 />\n      //               ))}\n      //           </ul>\n      //         </Collapse>\n      //       </li>\n      //     );\n      //   }}\n      // />\n        <div/>\n    );\n  }\n}\n\nexport default LinksGroup;\n"]},"metadata":{},"sourceType":"module"}