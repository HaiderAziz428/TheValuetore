{"ast":null,"code":"var _jsxFileName = \"/Users/michaeldaineka/Desktop/flatlogic/flatlogic-ecommerce/components/admin/Sidebar/Sidebar.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"next/router\";\nimport s from \"./Sidebar.module.scss\";\nimport LinksGroup from \"./LinksGroup/LinksGroup\";\nimport { openSidebar, closeSidebar, changeActiveSidebarItem } from \"redux/actions/navigation\";\nimport isScreen from \"core/screenHelper\";\nimport { logoutUser } from \"redux/actions/auth\";\nimport HomeIcon from \"public/images/e-commerce/sidebar/home\";\nimport DownloadIcon from \"public/images/e-commerce/sidebar/download\";\nimport BarIcon from \"public/images/e-commerce/sidebar/bar\";\nimport FileIcon from \"public/images/e-commerce/sidebar/file\";\nimport GiftIcon from \"public/images/e-commerce/sidebar/gift\";\nimport GridIcon from \"public/images/e-commerce/sidebar/grid\";\nimport PersonIcon from \"public/images/e-commerce/sidebar/person\";\nimport PricetagIcon from \"public/images/e-commerce/sidebar/pricetag\";\nimport SettingsIcon from \"public/images/e-commerce/sidebar/settings\";\nimport ShoppingIcon from \"public/images/e-commerce/sidebar/shopping\";\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onMouseEnter = this.onMouseEnter.bind(this);\n    this.onMouseLeave = this.onMouseLeave.bind(this);\n    this.doLogout = this.doLogout.bind(this);\n  }\n\n  onMouseEnter() {\n    if (!this.props.sidebarStatic && (isScreen(\"lg\") || isScreen(\"xl\"))) {\n      const paths = this.props.router.pathname.split(\"/\");\n      paths.pop();\n      this.props.dispatch(openSidebar());\n      this.props.dispatch(changeActiveSidebarItem(paths.join(\"/\")));\n    }\n  }\n\n  onMouseLeave() {\n    if (!this.props.sidebarStatic && (isScreen(\"lg\") || isScreen(\"xl\"))) {\n      this.props.dispatch(closeSidebar());\n      this.props.dispatch(changeActiveSidebarItem(null));\n    }\n  }\n\n  doLogout() {\n    this.props.dispatch(logoutUser());\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: `${!this.props.sidebarOpened && !this.props.sidebarStatic ? s.sidebarClose : \"\"} ${s.sidebarWrapper}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, __jsx(\"nav\", {\n      onMouseEnter: this.onMouseEnter,\n      onMouseLeave: this.onMouseLeave,\n      className: s.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, __jsx(\"header\", {\n      className: s.logo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, __jsx(\"span\", {\n      className: `${s.logoStyle} mx-1`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, \"Flatlogic\", __jsx(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 24\n      }\n    }, \".\"))), __jsx(\"ul\", {\n      className: s.nav,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, __jsx(LinksGroup, {\n      onActiveSidebarItemChange: activeItem => this.props.dispatch(changeActiveSidebarItem(activeItem)),\n      activeItem: this.props.activeItem,\n      header: \"Home\",\n      link: \"/admin/dashboard\",\n      isHeader: true,\n      iconType: \"node\",\n      iconName: __jsx(HomeIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 27\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }), this.props.currentUser && this.props.currentUser.role === \"admin\" && __jsx(LinksGroup, {\n      onActiveSidebarItemChange: activeItem => this.props.dispatch(changeActiveSidebarItem(activeItem)),\n      activeItem: this.props.activeItem,\n      header: \"Orders\",\n      link: \"/admin/orders\",\n      isHeader: true,\n      iconType: \"node\",\n      iconName: __jsx(DownloadIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 31\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }), this.props.currentUser && this.props.currentUser.role === \"admin\" && __jsx(LinksGroup, {\n      onActiveSidebarItemChange: activeItem => this.props.dispatch(changeActiveSidebarItem(activeItem)),\n      activeItem: this.props.activeItem,\n      header: \"Products\",\n      link: \"/admin/products\",\n      isHeader: true,\n      iconType: \"node\",\n      iconName: __jsx(PricetagIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 31\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }), this.props.currentUser && this.props.currentUser.role === \"admin\" && __jsx(LinksGroup, {\n      onActiveSidebarItemChange: activeItem => this.props.dispatch(changeActiveSidebarItem(activeItem)),\n      activeItem: this.props.activeItem,\n      header: \"Users\",\n      link: \"/admin/users\",\n      isHeader: true,\n      iconType: \"node\",\n      iconName: __jsx(PersonIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 31\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }), this.props.currentUser && this.props.currentUser.role === \"admin\" && __jsx(LinksGroup, {\n      onActiveSidebarItemChange: activeItem => this.props.dispatch(changeActiveSidebarItem(activeItem)),\n      activeItem: this.props.activeItem,\n      header: \"Categories\",\n      link: \"/admin/\\u0441ategories\",\n      isHeader: true,\n      iconType: \"node\",\n      iconName: __jsx(BarIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 31\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }\n    }), __jsx(LinksGroup, {\n      onActiveSidebarItemChange: activeItem => this.props.dispatch(changeActiveSidebarItem(activeItem)),\n      activeItem: this.props.activeItem,\n      header: \"My Profile\",\n      link: \"/admin/profile\",\n      isHeader: true,\n      iconType: \"node\",\n      iconName: __jsx(FileIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 27\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 13\n      }\n    }), __jsx(LinksGroup, {\n      onActiveSidebarItemChange: activeItem => this.props.dispatch(changeActiveSidebarItem(activeItem)),\n      activeItem: this.props.activeItem,\n      header: \"Change Password\",\n      link: \"/admin/password\",\n      isHeader: true,\n      iconType: \"node\",\n      iconName: __jsx(GiftIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 27\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 13\n      }\n    }), __jsx(LinksGroup, {\n      onActiveSidebarItemChange: activeItem => this.props.dispatch(changeActiveSidebarItem(activeItem)),\n      activeItem: this.props.activeItem,\n      header: \"Documentation\",\n      link: \"/documentation\",\n      isHeader: true,\n      iconType: \"node\",\n      iconName: __jsx(SettingsIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 27\n        }\n      }),\n      index: \"documentation\",\n      labelColor: \"success\",\n      target: \"_blank\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\n_defineProperty(Sidebar, \"propTypes\", {\n  sidebarStatic: PropTypes.bool,\n  sidebarOpened: PropTypes.bool,\n  dispatch: PropTypes.func.isRequired,\n  activeItem: PropTypes.string,\n  router: PropTypes.shape({\n    pathname: PropTypes.string\n  }).isRequired\n});\n\n_defineProperty(Sidebar, \"defaultProps\", {\n  sidebarStatic: false,\n  sidebarOpened: true,\n  activeItem: \"\"\n});\n\nfunction mapStateToProps(store) {\n  return {\n    sidebarOpened: store.navigation.sidebarOpened,\n    sidebarStatic: store.navigation.sidebarStatic,\n    activeItem: store.navigation.activeItem,\n    currentUser: store.auth.currentUser\n  };\n}\n\nexport default withRouter(connect(mapStateToProps)(Sidebar));","map":{"version":3,"sources":["/Users/michaeldaineka/Desktop/flatlogic/flatlogic-ecommerce/components/admin/Sidebar/Sidebar.js"],"names":["React","PropTypes","connect","withRouter","s","LinksGroup","openSidebar","closeSidebar","changeActiveSidebarItem","isScreen","logoutUser","HomeIcon","DownloadIcon","BarIcon","FileIcon","GiftIcon","GridIcon","PersonIcon","PricetagIcon","SettingsIcon","ShoppingIcon","Sidebar","Component","constructor","props","onMouseEnter","bind","onMouseLeave","doLogout","sidebarStatic","paths","router","pathname","split","pop","dispatch","join","render","sidebarOpened","sidebarClose","sidebarWrapper","root","logo","logoStyle","nav","activeItem","currentUser","role","bool","func","isRequired","string","shape","mapStateToProps","store","navigation","auth"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"next/router\";\nimport s from \"./Sidebar.module.scss\";\nimport LinksGroup from \"./LinksGroup/LinksGroup\";\nimport {\n  openSidebar,\n  closeSidebar,\n  changeActiveSidebarItem,\n} from \"redux/actions/navigation\";\nimport isScreen from \"core/screenHelper\";\nimport { logoutUser } from \"redux/actions/auth\";\n\nimport HomeIcon from \"public/images/e-commerce/sidebar/home\";\nimport DownloadIcon from \"public/images/e-commerce/sidebar/download\";\nimport BarIcon from \"public/images/e-commerce/sidebar/bar\";\nimport FileIcon from \"public/images/e-commerce/sidebar/file\";\nimport GiftIcon from \"public/images/e-commerce/sidebar/gift\";\nimport GridIcon from \"public/images/e-commerce/sidebar/grid\";\nimport PersonIcon from \"public/images/e-commerce/sidebar/person\";\nimport PricetagIcon from \"public/images/e-commerce/sidebar/pricetag\";\nimport SettingsIcon from \"public/images/e-commerce/sidebar/settings\";\nimport ShoppingIcon from \"public/images/e-commerce/sidebar/shopping\";\n\nclass Sidebar extends React.Component {\n  static propTypes = {\n    sidebarStatic: PropTypes.bool,\n    sidebarOpened: PropTypes.bool,\n    dispatch: PropTypes.func.isRequired,\n    activeItem: PropTypes.string,\n    router: PropTypes.shape({\n      pathname: PropTypes.string,\n    }).isRequired,\n  };\n\n  static defaultProps = {\n    sidebarStatic: false,\n    sidebarOpened: true,\n    activeItem: \"\",\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onMouseEnter = this.onMouseEnter.bind(this);\n    this.onMouseLeave = this.onMouseLeave.bind(this);\n    this.doLogout = this.doLogout.bind(this);\n  }\n\n  onMouseEnter() {\n    if (!this.props.sidebarStatic && (isScreen(\"lg\") || isScreen(\"xl\"))) {\n      const paths = this.props.router.pathname.split(\"/\");\n      paths.pop();\n      this.props.dispatch(openSidebar());\n      this.props.dispatch(changeActiveSidebarItem(paths.join(\"/\")));\n    }\n  }\n\n  onMouseLeave() {\n    if (!this.props.sidebarStatic && (isScreen(\"lg\") || isScreen(\"xl\"))) {\n      this.props.dispatch(closeSidebar());\n      this.props.dispatch(changeActiveSidebarItem(null));\n    }\n  }\n\n  doLogout() {\n    this.props.dispatch(logoutUser());\n  }\n\n  render() {\n    return (\n      <div\n        className={`${\n          !this.props.sidebarOpened && !this.props.sidebarStatic\n            ? s.sidebarClose\n            : \"\"\n        } ${s.sidebarWrapper}`}\n      >\n        <nav\n          onMouseEnter={this.onMouseEnter}\n          onMouseLeave={this.onMouseLeave}\n          className={s.root}\n        >\n          <header className={s.logo}>\n            <span className={`${s.logoStyle} mx-1`}>\n              Flatlogic<i>.</i>\n            </span>\n          </header>\n          <ul className={s.nav}>\n            <LinksGroup\n                onActiveSidebarItemChange={(activeItem) =>\n                    this.props.dispatch(changeActiveSidebarItem(activeItem))\n                }\n                activeItem={this.props.activeItem}\n                header=\"Home\"\n                link=\"/admin/dashboard\"\n                isHeader\n                iconType=\"node\"\n                iconName={<HomeIcon />}\n            />\n\n            {this.props.currentUser &&\n            this.props.currentUser.role === \"admin\" && (\n                <LinksGroup\n                    onActiveSidebarItemChange={(activeItem) =>\n                        this.props.dispatch(changeActiveSidebarItem(activeItem))\n                    }\n                    activeItem={this.props.activeItem}\n                    header=\"Orders\"\n                    link=\"/admin/orders\"\n                    isHeader\n                    iconType=\"node\"\n                    iconName={<DownloadIcon />}\n                />\n            )}\n\n            {this.props.currentUser &&\n            this.props.currentUser.role === \"admin\" && (\n                <LinksGroup\n                    onActiveSidebarItemChange={(activeItem) =>\n                        this.props.dispatch(changeActiveSidebarItem(activeItem))\n                    }\n                    activeItem={this.props.activeItem}\n                    header=\"Products\"\n                    link=\"/admin/products\"\n                    isHeader\n                    iconType=\"node\"\n                    iconName={<PricetagIcon />}\n                />\n            )}\n\n            {this.props.currentUser &&\n            this.props.currentUser.role === \"admin\" && (\n                <LinksGroup\n                    onActiveSidebarItemChange={(activeItem) =>\n                        this.props.dispatch(changeActiveSidebarItem(activeItem))\n                    }\n                    activeItem={this.props.activeItem}\n                    header=\"Users\"\n                    link=\"/admin/users\"\n                    isHeader\n                    iconType=\"node\"\n                    iconName={<PersonIcon />}\n                />\n            )}\n\n            {/* {this.props.currentUser && this.props.currentUser.role === 'admin' &&\n            <LinksGroup\n              onActiveSidebarItemChange={activeItem => this.props.dispatch(changeActiveSidebarItem(activeItem))}\n              activeItem={this.props.activeItem}\n              header=\"Analytics\"\n              link=\"/admin/analytics\"\n              isHeader\n              iconType=\"node\"\n              iconName={<BarIcon/>}\n            />\n          }\n\n          {this.props.currentUser && this.props.currentUser.role === 'admin' &&\n            <LinksGroup\n              onActiveSidebarItemChange={activeItem => this.props.dispatch(changeActiveSidebarItem(activeItem))}\n              activeItem={this.props.activeItem}\n              header=\"Marketing\"\n              link=\"/admin/marketing\"\n              isHeader\n              iconType=\"node\"\n              iconName={<FileIcon/>}\n            />\n          }\n\n          {this.props.currentUser && this.props.currentUser.role === 'admin' &&\n            <LinksGroup\n              onActiveSidebarItemChange={activeItem => this.props.dispatch(changeActiveSidebarItem(activeItem))}\n              activeItem={this.props.activeItem}\n              header=\"Discounts\"\n              link=\"/admin/discounts\"\n              isHeader\n              iconType=\"node\"\n              iconName={<GiftIcon/>}\n            />\n          }\n\n          {this.props.currentUser && this.props.currentUser.role === 'admin' &&\n            <LinksGroup\n              onActiveSidebarItemChange={activeItem => this.props.dispatch(changeActiveSidebarItem(activeItem))}\n              activeItem={this.props.activeItem}\n              header=\"Apps\"\n              link=\"/admin/apps\"\n              isHeader\n              iconType=\"node\"\n              iconName={<GridIcon/>}\n            />\n          }\n\n          {this.props.currentUser && this.props.currentUser.role === 'admin' &&\n            <span className={s.dividerText}>Sales Channels</span>\n          }\n\n          {this.props.currentUser && this.props.currentUser.role === 'admin' &&\n            <LinksGroup\n              onActiveSidebarItemChange={activeItem => this.props.dispatch(changeActiveSidebarItem(activeItem))}\n              activeItem={this.props.activeItem}\n              header=\"Online Store\"\n              link=\"/admin/store\"\n              isHeader\n              iconType=\"node\"\n              iconName={<ShoppingIcon/>}\n            />\n          }\n\n          {this.props.currentUser && this.props.currentUser.role === 'admin' &&\n            <LinksGroup\n              onActiveSidebarItemChange={activeItem => this.props.dispatch(changeActiveSidebarItem(activeItem))}\n              activeItem={this.props.activeItem}\n              className={s.sidebarBottomItem}\n              header=\"Settings\"\n              link=\"/admin/settings\"\n              isHeader\n              iconType=\"node\"\n              iconName={<SettingsIcon/>}\n            />\n          } */}\n\n            {this.props.currentUser &&\n            this.props.currentUser.role === \"admin\" && (\n                <LinksGroup\n                    onActiveSidebarItemChange={(activeItem) =>\n                        this.props.dispatch(changeActiveSidebarItem(activeItem))\n                    }\n                    activeItem={this.props.activeItem}\n                    header=\"Categories\"\n                    link=\"/admin/сategories\"\n                    isHeader\n                    iconType=\"node\"\n                    iconName={<BarIcon />}\n                />\n            )}\n\n            <LinksGroup\n                onActiveSidebarItemChange={(activeItem) =>\n                    this.props.dispatch(changeActiveSidebarItem(activeItem))\n                }\n                activeItem={this.props.activeItem}\n                header=\"My Profile\"\n                link=\"/admin/profile\"\n                isHeader\n                iconType=\"node\"\n                iconName={<FileIcon />}\n            />\n\n            <LinksGroup\n                onActiveSidebarItemChange={(activeItem) =>\n                    this.props.dispatch(changeActiveSidebarItem(activeItem))\n                }\n                activeItem={this.props.activeItem}\n                header=\"Change Password\"\n                link=\"/admin/password\"\n                isHeader\n                iconType=\"node\"\n                iconName={<GiftIcon />}\n            />\n\n            <LinksGroup\n                onActiveSidebarItemChange={(activeItem) =>\n                    this.props.dispatch(changeActiveSidebarItem(activeItem))\n                }\n                activeItem={this.props.activeItem}\n                header=\"Documentation\"\n                link=\"/documentation\"\n                isHeader\n                iconType=\"node\"\n                iconName={<SettingsIcon />}\n                index=\"documentation\"\n                labelColor=\"success\"\n                target=\"_blank\"\n            />\n          </ul>\n        </nav>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(store) {\n  return {\n    sidebarOpened: store.navigation.sidebarOpened,\n    sidebarStatic: store.navigation.sidebarStatic,\n    activeItem: store.navigation.activeItem,\n    currentUser: store.auth.currentUser,\n  };\n}\n\nexport default withRouter(connect(mapStateToProps)(Sidebar));\n"]},"metadata":{},"sourceType":"module"}