{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { TOGGLE_SIDEBAR, OPEN_SIDEBAR, CLOSE_SIDEBAR, CHANGE_ACTIVE_SIDEBAR_ITEM } from \"../actions/navigation\";\nconst initialState = {\n  sidebarOpened: false,\n  sidebarStatic: false ? !!JSON.parse(localStorage.getItem(\"staticSidebar\")) : false,\n  activeItem: JSON.parse(false ? localStorage.getItem(\"staticSidebar\") : \"false\") ? window.location.pathname : null\n};\nexport default function runtime(state = initialState, action) {\n  switch (action.type) {\n    case TOGGLE_SIDEBAR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        sidebarStatic: action.payload\n      });\n\n    case OPEN_SIDEBAR:\n      return Object.assign({}, state, {\n        sidebarOpened: true\n      });\n\n    case CLOSE_SIDEBAR:\n      return Object.assign({}, state, {\n        sidebarOpened: false\n      });\n\n    case CHANGE_ACTIVE_SIDEBAR_ITEM:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        activeItem: action.activeItem\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/michaeldaineka/Desktop/flatlogic/flatlogic-ecommerce/redux/reducers/navigation.js"],"names":["TOGGLE_SIDEBAR","OPEN_SIDEBAR","CLOSE_SIDEBAR","CHANGE_ACTIVE_SIDEBAR_ITEM","initialState","sidebarOpened","sidebarStatic","JSON","parse","localStorage","getItem","activeItem","window","location","pathname","runtime","state","action","type","payload","Object","assign"],"mappings":";;;;;;AAAA,SACEA,cADF,EAEEC,YAFF,EAGEC,aAHF,EAIEC,0BAJF,QAKO,uBALP;AAOA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,aAAa,EAAE,KADI;AAEnBC,EAAAA,aAAa,EACX,QACI,CAAC,CAACC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAX,CADN,GAEI,KALa;AAMnBC,EAAAA,UAAU,EAAEJ,IAAI,CAACC,KAAL,CACV,QACIC,YAAY,CAACC,OAAb,CAAqB,eAArB,CADJ,GAEI,OAHM,IAKRE,MAAM,CAACC,QAAP,CAAgBC,QALR,GAMR;AAZe,CAArB;AAeA,eAAe,SAASC,OAAT,CAAiBC,KAAK,GAAGZ,YAAzB,EAAuCa,MAAvC,EAA+C;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKlB,cAAL;AACE,6CACKgB,KADL;AAEEV,QAAAA,aAAa,EAAEW,MAAM,CAACE;AAFxB;;AAIF,SAAKlB,YAAL;AACE,aAAOmB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAC9BX,QAAAA,aAAa,EAAE;AADe,OAAzB,CAAP;;AAGF,SAAKH,aAAL;AACE,aAAOkB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAC9BX,QAAAA,aAAa,EAAE;AADe,OAAzB,CAAP;;AAGF,SAAKF,0BAAL;AACE,6CACKa,KADL;AAEEL,QAAAA,UAAU,EAAEM,MAAM,CAACN;AAFrB;;AAIF;AACE,aAAOK,KAAP;AApBJ;AAsBD","sourcesContent":["import {\n  TOGGLE_SIDEBAR,\n  OPEN_SIDEBAR,\n  CLOSE_SIDEBAR,\n  CHANGE_ACTIVE_SIDEBAR_ITEM,\n} from \"../actions/navigation\";\n\nconst initialState = {\n  sidebarOpened: false,\n  sidebarStatic:\n    typeof window !== \"undefined\"\n      ? !!JSON.parse(localStorage.getItem(\"staticSidebar\"))\n      : false,\n  activeItem: JSON.parse(\n    typeof window !== \"undefined\"\n      ? localStorage.getItem(\"staticSidebar\")\n      : \"false\"\n  )\n    ? window.location.pathname\n    : null,\n};\n\nexport default function runtime(state = initialState, action) {\n  switch (action.type) {\n    case TOGGLE_SIDEBAR:\n      return {\n        ...state,\n        sidebarStatic: action.payload,\n      };\n    case OPEN_SIDEBAR:\n      return Object.assign({}, state, {\n        sidebarOpened: true,\n      });\n    case CLOSE_SIDEBAR:\n      return Object.assign({}, state, {\n        sidebarOpened: false,\n      });\n    case CHANGE_ACTIVE_SIDEBAR_ITEM:\n      return {\n        ...state,\n        activeItem: action.activeItem,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}