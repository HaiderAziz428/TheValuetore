{"ast":null,"code":"import _regeneratorRuntime from \"/Users/michaeldaineka/Desktop/flatlogic/flatlogic-ecommerce/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/michaeldaineka/Desktop/flatlogic/flatlogic-ecommerce/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport Errors from \"../../../components/admin/FormItems/error/errors\";\nimport { push } from \"connected-react-router\";\nimport { doInit } from \"redux/actions/auth\";\nimport { toast } from \"react-toastify\";\nvar actions = {\n  doNew: function doNew() {\n    return {\n      type: \"PRODUCTS_FORM_RESET\"\n    };\n  },\n  doFind: function doFind(id) {\n    return /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                try {\n                  dispatch({\n                    type: \"PRODUCTS_FORM_FIND_STARTED\"\n                  });\n                  axios.get(\"/products/\".concat(id)).then(function (res) {\n                    var record = res.data;\n                    dispatch({\n                      type: \"PRODUCTS_FORM_FIND_SUCCESS\",\n                      payload: record\n                    });\n                  });\n                } catch (error) {\n                  Errors.handle(error);\n                  dispatch({\n                    type: \"PRODUCTS_FORM_FIND_ERROR\"\n                  });\n                  dispatch(push(\"/admin/products\"));\n                }\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n  },\n  doCreate: function doCreate(values) {\n    return /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                try {\n                  dispatch({\n                    type: \"PRODUCTS_FORM_CREATE_STARTED\"\n                  });\n                  axios.post(\"/products\", {\n                    data: values\n                  }).then(function (res) {\n                    dispatch({\n                      type: \"PRODUCTS_FORM_CREATE_SUCCESS\"\n                    });\n                    toast.success(\"products created\");\n                    dispatch(push(\"/admin/products\"));\n                  });\n                } catch (error) {\n                  Errors.handle(error);\n                  dispatch({\n                    type: \"PRODUCTS_FORM_CREATE_ERROR\"\n                  });\n                }\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n  },\n  doUpdate: function doUpdate(id, values, isProfile) {\n    return /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch, getState) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                dispatch({\n                  type: \"PRODUCTS_FORM_UPDATE_STARTED\"\n                });\n                _context3.next = 4;\n                return axios.put(\"/products/\".concat(id), {\n                  id: id,\n                  data: values\n                });\n\n              case 4:\n                dispatch(doInit());\n                dispatch({\n                  type: \"PRODUCTS_FORM_UPDATE_SUCCESS\"\n                });\n\n                if (isProfile) {\n                  toast.success(\"Profile updated\");\n                } else {\n                  toast.success(\"products updated\");\n                  dispatch(push(\"/admin/products\"));\n                }\n\n                _context3.next = 13;\n                break;\n\n              case 9:\n                _context3.prev = 9;\n                _context3.t0 = _context3[\"catch\"](0);\n                Errors.handle(_context3.t0);\n                dispatch({\n                  type: \"PRODUCTS_FORM_UPDATE_ERROR\"\n                });\n\n              case 13:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 9]]);\n      }));\n\n      return function (_x3, _x4) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n  }\n};\nexport default actions;","map":{"version":3,"sources":["/Users/michaeldaineka/Desktop/flatlogic/flatlogic-ecommerce/redux/actions/products/productsFormActions.js"],"names":["axios","Errors","push","doInit","toast","actions","doNew","type","doFind","id","dispatch","get","then","res","record","data","payload","error","handle","doCreate","values","post","success","doUpdate","isProfile","getState","put"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport Errors from \"../../../components/admin/FormItems/error/errors\";\nimport { push } from \"connected-react-router\";\nimport { doInit } from \"redux/actions/auth\";\nimport { toast } from \"react-toastify\";\n\nconst actions = {\n  doNew: () => {\n    return {\n      type: \"PRODUCTS_FORM_RESET\",\n    };\n  },\n\n  doFind: (id) => async (dispatch) => {\n    try {\n      dispatch({\n        type: \"PRODUCTS_FORM_FIND_STARTED\",\n      });\n\n      axios.get(`/products/${id}`).then((res) => {\n        const record = res.data;\n\n        dispatch({\n          type: \"PRODUCTS_FORM_FIND_SUCCESS\",\n          payload: record,\n        });\n      });\n    } catch (error) {\n      Errors.handle(error);\n\n      dispatch({\n        type: \"PRODUCTS_FORM_FIND_ERROR\",\n      });\n\n      dispatch(push(\"/admin/products\"));\n    }\n  },\n\n  doCreate: (values) => async (dispatch) => {\n    try {\n      dispatch({\n        type: \"PRODUCTS_FORM_CREATE_STARTED\",\n      });\n\n      axios.post(\"/products\", { data: values }).then((res) => {\n        dispatch({\n          type: \"PRODUCTS_FORM_CREATE_SUCCESS\",\n        });\n\n        toast.success(\"products created\");\n        dispatch(push(\"/admin/products\"));\n      });\n    } catch (error) {\n      Errors.handle(error);\n\n      dispatch({\n        type: \"PRODUCTS_FORM_CREATE_ERROR\",\n      });\n    }\n  },\n\n  doUpdate: (id, values, isProfile) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: \"PRODUCTS_FORM_UPDATE_STARTED\",\n      });\n\n      await axios.put(`/products/${id}`, { id, data: values });\n\n      dispatch(doInit());\n\n      dispatch({\n        type: \"PRODUCTS_FORM_UPDATE_SUCCESS\",\n      });\n\n      if (isProfile) {\n        toast.success(\"Profile updated\");\n      } else {\n        toast.success(\"products updated\");\n        dispatch(push(\"/admin/products\"));\n      }\n    } catch (error) {\n      Errors.handle(error);\n\n      dispatch({\n        type: \"PRODUCTS_FORM_UPDATE_ERROR\",\n      });\n    }\n  },\n};\n\nexport default actions;\n"]},"metadata":{},"sourceType":"module"}