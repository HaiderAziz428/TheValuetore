{"ast":null,"code":"var _jsxFileName = \"/Users/michaeldaineka/Desktop/flatlogic/flatlogic-ecommerce/components/admin/Sidebar/LinksGroup/LinksGroup.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Link from \"next/link\";\nimport ActiveLink from 'components/admin/ActiveLink/ActiveLink';\nimport { withRouter } from \"next/router\";\nimport { Collapse, Badge } from \"reactstrap\";\nimport { Route } from \"react-router\";\nimport classnames from \"classnames\";\nimport { connect } from \"react-redux\";\nimport s from \"./LinksGroup.module.scss\";\n\nclass LinksGroup extends Component {\n  /* eslint-disable */\n\n  /* eslint-enable */\n  constructor(props) {\n    super(props);\n    this.togglePanelCollapse = this.togglePanelCollapse.bind(this);\n    this.state = {\n      headerLinkWasClicked: true\n    };\n  }\n\n  togglePanelCollapse(link) {\n    this.props.onActiveSidebarItemChange(link);\n    this.setState({\n      headerLinkWasClicked: !this.state.headerLinkWasClicked || this.props.activeItem && !this.props.activeItem.includes(this.props.index)\n    });\n  }\n\n  render() {\n    const isOpen = this.props.activeItem && this.props.activeItem.includes(this.props.index) && this.state.headerLinkWasClicked;\n    const {\n      exact\n    } = this.props.exact;\n\n    if (!this.props.childrenLinks) {\n      if (this.props.isHeader) {\n        return __jsx(\"li\", {\n          className: classnames(\"link-wrapper\", s.headerLink, this.props.className),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }\n        }, __jsx(ActiveLink, {\n          href: this.props.link,\n          activeClassName: s.headerLinkActive,\n          exact: exact,\n          target: this.props.target,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }\n        }, __jsx(\"a\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }\n        }, this.props.iconType === \"text\" ? __jsx(\"span\", {\n          className: classnames(\"icon\", s.icon),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }\n        }, __jsx(\"i\", {\n          className: `la ${this.props.iconName}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 19\n          }\n        })) : __jsx(\"span\", {\n          className: s.iconWrapper,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }\n        }, this.props.iconName), this.props.header, this.props.label && __jsx(\"sup\", {\n          className: `${s.headerLabel} ${s.headerUpdate} text-${this.props.labelColor || \"warning\"}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }\n        }, this.props.label), this.props.badge && __jsx(Badge, {\n          className: s.badge,\n          pill: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }\n        }, \"9\"))));\n      }\n\n      return __jsx(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }\n      }, __jsx(ActiveLink, {\n        href: this.props.link,\n        activeClassName: s.headerLinkActive,\n        style: {\n          paddingLeft: `${26 + 10 * (this.props.deep - 1)}px`\n        },\n        onClick: e => {\n          // able to go to link is not available(for Demo)\n          if (this.props.link.includes(\"menu\")) {\n            e.preventDefault();\n          }\n        },\n        exact: exact,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }\n      }, __jsx(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }\n      }, this.props.header, \" \", this.props.label && __jsx(\"sup\", {\n        className: `${s.headerLabel} text-${this.props.labelColor || \"warning\"}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }\n      }, this.props.label))));\n    }\n    /* eslint-disable */\n\n\n    return __jsx(Route, {\n      path: this.props.link,\n      children: params => {\n        const {\n          match\n        } = params;\n        return __jsx(\"li\", {\n          className: classnames(\"link-wrapper\", {\n            [s.headerLink]: this.props.isHeader\n          }, this.props.className),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }\n        }, __jsx(\"a\", {\n          className: classnames({\n            [s.headerLinkActive]: match\n          }, {\n            [s.collapsed]: isOpen\n          }, \"d-flex\"),\n          style: {\n            paddingLeft: `${this.props.deep == 0 ? 50 : 26 + 10 * (this.props.deep - 1)}px`\n          },\n          onClick: () => this.togglePanelCollapse(this.props.link),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }\n        }, this.props.isHeader ? __jsx(\"span\", {\n          className: classnames(\"icon\", s.icon),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 19\n          }\n        }, __jsx(\"i\", {\n          className: `fi ${this.props.iconName}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 21\n          }\n        })) : null, this.props.header, \" \", this.props.label && __jsx(\"sup\", {\n          className: `${s.headerLabel} ${s.headerNode} ml-1 text-${this.props.labelColor || \"warning\"}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 19\n          }\n        }, this.props.label), __jsx(\"b\", {\n          className: [\"la la-angle-left\", s.caret].join(\" \"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 17\n          }\n        })), __jsx(Collapse, {\n          className: s.panel,\n          isOpen: isOpen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }\n        }, __jsx(\"ul\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 17\n          }\n        }, this.props.childrenLinks && this.props.childrenLinks.map((child, ind) => __jsx(LinksGroup, {\n          onActiveSidebarItemChange: this.props.onActiveSidebarItemChange,\n          activeItem: this.props.activeItem,\n          header: child.header,\n          link: child.link,\n          index: child.index,\n          childrenLinks: child.childrenLinks,\n          deep: this.props.deep + 1,\n          key: ind // eslint-disable-line\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 23\n          }\n        })))));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\n_defineProperty(LinksGroup, \"propTypes\", {\n  header: PropTypes.node.isRequired,\n  link: PropTypes.string.isRequired,\n  iconType: PropTypes.string.isRequired,\n  childrenLinks: PropTypes.array,\n  iconName: PropTypes.string,\n  className: PropTypes.string,\n  badge: PropTypes.string,\n  label: PropTypes.string,\n  activeItem: PropTypes.string,\n  isHeader: PropTypes.bool,\n  index: PropTypes.string,\n  deep: PropTypes.number,\n  onActiveSidebarItemChange: PropTypes.func,\n  labelColor: PropTypes.string,\n  exact: PropTypes.bool\n});\n\n_defineProperty(LinksGroup, \"defaultProps\", {\n  link: \"\",\n  childrenLinks: null,\n  className: \"\",\n  isHeader: false,\n  deep: 0,\n  activeItem: \"\",\n  label: \"\",\n  exact: true\n});\n\nexport default withRouter(connect()(LinksGroup));","map":{"version":3,"sources":["/Users/michaeldaineka/Desktop/flatlogic/flatlogic-ecommerce/components/admin/Sidebar/LinksGroup/LinksGroup.js"],"names":["React","Component","PropTypes","Link","ActiveLink","withRouter","Collapse","Badge","Route","classnames","connect","s","LinksGroup","constructor","props","togglePanelCollapse","bind","state","headerLinkWasClicked","link","onActiveSidebarItemChange","setState","activeItem","includes","index","render","isOpen","exact","childrenLinks","isHeader","headerLink","className","headerLinkActive","target","iconType","icon","iconName","iconWrapper","header","label","headerLabel","headerUpdate","labelColor","badge","paddingLeft","deep","e","preventDefault","params","match","collapsed","headerNode","caret","join","panel","map","child","ind","node","isRequired","string","array","bool","number","func"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Link from \"next/link\";\nimport ActiveLink from 'components/admin/ActiveLink/ActiveLink'\nimport { withRouter } from \"next/router\";\nimport { Collapse, Badge } from \"reactstrap\";\nimport { Route } from \"react-router\";\nimport classnames from \"classnames\";\nimport { connect } from \"react-redux\";\n\nimport s from \"./LinksGroup.module.scss\";\n\nclass LinksGroup extends Component {\n  /* eslint-disable */\n  static propTypes = {\n    header: PropTypes.node.isRequired,\n    link: PropTypes.string.isRequired,\n    iconType: PropTypes.string.isRequired,\n    childrenLinks: PropTypes.array,\n    iconName: PropTypes.string,\n    className: PropTypes.string,\n    badge: PropTypes.string,\n    label: PropTypes.string,\n    activeItem: PropTypes.string,\n    isHeader: PropTypes.bool,\n    index: PropTypes.string,\n    deep: PropTypes.number,\n    onActiveSidebarItemChange: PropTypes.func,\n    labelColor: PropTypes.string,\n    exact: PropTypes.bool,\n  };\n  /* eslint-enable */\n\n  static defaultProps = {\n    link: \"\",\n    childrenLinks: null,\n    className: \"\",\n    isHeader: false,\n    deep: 0,\n    activeItem: \"\",\n    label: \"\",\n    exact: true,\n  };\n\n  constructor(props) {\n    super(props);\n    this.togglePanelCollapse = this.togglePanelCollapse.bind(this);\n\n    this.state = {\n      headerLinkWasClicked: true,\n    };\n  }\n\n  togglePanelCollapse(link) {\n    this.props.onActiveSidebarItemChange(link);\n    this.setState({\n      headerLinkWasClicked:\n        !this.state.headerLinkWasClicked ||\n        (this.props.activeItem &&\n          !this.props.activeItem.includes(this.props.index)),\n    });\n  }\n\n  render() {\n    const isOpen =\n      this.props.activeItem &&\n      this.props.activeItem.includes(this.props.index) &&\n      this.state.headerLinkWasClicked;\n\n    const { exact } = this.props.exact;\n\n    if (!this.props.childrenLinks) {\n      if (this.props.isHeader) {\n        return (\n          <li\n            className={classnames(\n              \"link-wrapper\",\n              s.headerLink,\n              this.props.className\n            )}\n          >\n            <ActiveLink\n              href={this.props.link}\n              activeClassName={s.headerLinkActive}\n              exact={exact}\n              target={this.props.target}\n            >\n              <a>\n              {this.props.iconType === \"text\" ? (\n                <span className={classnames(\"icon\", s.icon)}>\n                  <i className={`la ${this.props.iconName}`} />\n                </span>\n              ) : (\n                <span className={s.iconWrapper}>{this.props.iconName}</span>\n              )}\n              {this.props.header}\n              {this.props.label && (\n                <sup\n                  className={`${s.headerLabel} ${s.headerUpdate} text-${\n                    this.props.labelColor || \"warning\"\n                  }`}\n                >\n                  {this.props.label}\n                </sup>\n              )}\n              {this.props.badge && (\n                <Badge className={s.badge} pill>\n                  9\n                </Badge>\n              )}\n              </a>\n            </ActiveLink>\n          </li>\n        );\n      }\n      return (\n        <li>\n          <ActiveLink\n            href={this.props.link}\n            activeClassName={s.headerLinkActive}\n            style={{ paddingLeft: `${26 + 10 * (this.props.deep - 1)}px` }}\n            onClick={(e) => {\n              // able to go to link is not available(for Demo)\n              if (this.props.link.includes(\"menu\")) {\n                e.preventDefault();\n              }\n            }}\n            exact={exact}\n          >\n            <a>\n            {this.props.header}{\" \"}\n            {this.props.label && (\n              <sup\n                className={`${s.headerLabel} text-${\n                  this.props.labelColor || \"warning\"\n                }`}\n              >\n                {this.props.label}\n              </sup>\n            )}\n            </a>\n          </ActiveLink>\n        </li>\n      );\n    }\n    /* eslint-disable */\n    return (\n      <Route\n        path={this.props.link}\n        children={(params) => {\n          const { match } = params;\n          return (\n            <li\n              className={classnames(\n                \"link-wrapper\",\n                { [s.headerLink]: this.props.isHeader },\n                this.props.className\n              )}\n            >\n              <a\n                className={classnames(\n                  { [s.headerLinkActive]: match },\n                  { [s.collapsed]: isOpen },\n                  \"d-flex\"\n                )}\n                style={{\n                  paddingLeft: `${\n                    this.props.deep == 0 ? 50 : 26 + 10 * (this.props.deep - 1)\n                  }px`,\n                }}\n                onClick={() => this.togglePanelCollapse(this.props.link)}\n              >\n                {this.props.isHeader ? (\n                  <span className={classnames(\"icon\", s.icon)}>\n                    <i className={`fi ${this.props.iconName}`} />\n                  </span>\n                ) : null}\n                {this.props.header}{\" \"}\n                {this.props.label && (\n                  <sup\n                    className={`${s.headerLabel} ${s.headerNode} ml-1 text-${\n                      this.props.labelColor || \"warning\"\n                    }`}\n                  >\n                    {this.props.label}\n                  </sup>\n                )}\n                <b className={[\"la la-angle-left\", s.caret].join(\" \")} />\n              </a>\n              {/* eslint-enable */}\n              <Collapse className={s.panel} isOpen={isOpen}>\n                <ul>\n                  {this.props.childrenLinks &&\n                    this.props.childrenLinks.map((child, ind) => (\n                      <LinksGroup\n                        onActiveSidebarItemChange={\n                          this.props.onActiveSidebarItemChange\n                        }\n                        activeItem={this.props.activeItem}\n                        header={child.header}\n                        link={child.link}\n                        index={child.index}\n                        childrenLinks={child.childrenLinks}\n                        deep={this.props.deep + 1}\n                        key={ind} // eslint-disable-line\n                      />\n                    ))}\n                </ul>\n              </Collapse>\n            </li>\n          );\n        }}\n      />\n    );\n  }\n}\n\nexport default withRouter(connect()(LinksGroup));\n"]},"metadata":{},"sourceType":"module"}